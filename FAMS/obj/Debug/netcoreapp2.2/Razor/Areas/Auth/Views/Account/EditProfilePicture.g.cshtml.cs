#pragma checksum "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\Account\EditProfilePicture.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a48dd01c6bf1cd4e62d1de08091498f56e7f00f0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Auth_Views_Account_EditProfilePicture), @"mvc.1.0.view", @"/Areas/Auth/Views/Account/EditProfilePicture.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Auth/Views/Account/EditProfilePicture.cshtml", typeof(AspNetCore.Areas_Auth_Views_Account_EditProfilePicture))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\_ViewImports.cshtml"
using FADMS.Areas.Auth.Models;

#line default
#line hidden
#line 2 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\_ViewImports.cshtml"
using FADMS.Data.Entity;

#line default
#line hidden
#line 3 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\_ViewImports.cshtml"
using FADMS.Data.Models.Auth;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a48dd01c6bf1cd4e62d1de08091498f56e7f00f0", @"/Areas/Auth/Views/Account/EditProfilePicture.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"05ed0d5d84e90c738d3da4ed29b0200b3e9a94e3", @"/Areas/Auth/Views/_ViewImports.cshtml")]
    public class Areas_Auth_Views_Account_EditProfilePicture : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 705, true);
            WriteLiteral(@"
<style>
    label.cabinet {
        display: block;
        cursor: pointer;
    }
        label.cabinet input.file {
            position: relative;
            height: 100%;
            width: auto;
            opacity: 0;
            -moz-opacity: 0;
            filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);
            margin-top: -30px;
        }
    #upload-demo {
        width: 300px;
        height: 300px;
        padding-bottom: 25px;
    }
</style>
<br />
<br />


<div class=""container"" style=""min-width:500px;"">
    <div class=""d-flex justify-content-center"">
        <div class=""col-md-6"">
            <input type=""hidden"" id=""empId"" name=""empId""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 705, "\"", 736, 1);
#line 29 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\Account\EditProfilePicture.cshtml"
WriteAttributeValue("", 713, Model.employeeInfo?.Id, 713, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(737, 75, true);
            WriteLiteral(" />\r\n            <input type=\"hidden\" name=\"photographID\" id=\"photographID\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 812, "\"", 841, 1);
#line 30 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\Account\EditProfilePicture.cshtml"
WriteAttributeValue("", 820, Model.photograph?.Id, 820, 21, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(842, 572, true);
            WriteLiteral(@" />
            <div class=""card"" style=""margin-top:10px;"">
                <div class=""text-center card-header"">Image Crop</div>
                <div class=""card-body"">
                    <div id=""main-cropper"">

                    </div>
                    <input type=""file"" id=""select"" class=""form-control"" value=""Choose Image"" accept=""image/*"">
                    <button id=""btnupload"" style=""margin-top: 10px;"" name=""btnupload"" class=""btn btn-success"">Crop</button>
                </div>
            </div>
        </div>
    </div>
</div>



");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(1431, 1152, true);
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.css"" />
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.js""></script>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css"" />



    <script type=""text/javascript"">
        // Upload button to Post Cropped Image to Store.
    $('#btnupload').on('click', function ()
    {
        basic.croppie('result', 'blob').then(function (blob)
        {
            var empid = $('#empId').val();
            var photoId = $('#photographID').val();
            var formData = new FormData();
            formData.append('filename', 'FileName.png');
            formData.append('blob', blob);
            formData.append('employeeId', empid);
   ");
                WriteLiteral("         formData.append(\'photoId\', photoId);\r\n            var myAppUrlSettings =\r\n            {\r\n                MyUsefulUrl: \'");
                EndContext();
                BeginContext(2584, 40, false);
#line 71 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\Auth\Views\Account\EditProfilePicture.cshtml"
                         Write(Url.Action("CustomCrop", "EmployeeInfo"));

#line default
#line hidden
                EndContext();
                BeginContext(2624, 2022, true);
                WriteLiteral(@"'
            }
            var request = new XMLHttpRequest();
            request.open('POST', myAppUrlSettings.MyUsefulUrl);
            request.send(formData);
            request.onreadystatechange = function () {
               // Call a function when the state changes.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200)
                {
                    var response = JSON.parse(request.responseText);
                    console.log(response);
                    if (response != ""Failed"")
                    {
                        swal('', 'Photo Cropped Successfully!', 'success').
                            then(function () {
                                window.location.href = ""/Employee/EmployeeProfile/Index/"" + empid;
                            })
         
                    }
                    if (response.message == ""ERROR"")
                    {
                        window.location.reload();
                    }
          ");
                WriteLiteral(@"      }
            }
        });
    });
        //initialize Croppie
        var basic = $('#main-cropper').croppie
            ({
                viewport: { width: 300, height: 300 },
                boundary: { width: 400, height: 400 },
                showZoomer: true,
                url: '/logo/emp.png',
                format: 'png'|'jpeg'|'png'|'webp'
            });
        //Reading the contents of the specified Blob or File
        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#main-cropper').croppie('bind', {
                        url: e.target.result
                    });
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        // Change Event to Read file content from File input
        $('#select').on('change', function () { readFile(this); });
");
                EndContext();
                BeginContext(6822, 15, true);
                WriteLiteral("    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
