#pragma checksum "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d2b43cc352cd1a1f8d3a192d87ce7f56168955b1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_FAMSDEALER_Views_SalesInvoice_Index), @"mvc.1.0.view", @"/Areas/FAMSDEALER/Views/SalesInvoice/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/FAMSDEALER/Views/SalesInvoice/Index.cshtml", typeof(AspNetCore.Areas_FAMSDEALER_Views_SalesInvoice_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\_ViewImports.cshtml"
using FADMS;

#line default
#line hidden
#line 2 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\_ViewImports.cshtml"
using FADMS.Models;

#line default
#line hidden
#line 3 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\_ViewImports.cshtml"
using FADMS.Areas.FAMSDEALER;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d2b43cc352cd1a1f8d3a192d87ce7f56168955b1", @"/Areas/FAMSDEALER/Views/SalesInvoice/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2d6da59ad1f56a285e9f316e27282c43cacd5d73", @"/Areas/FAMSDEALER/Views/_ViewImports.cshtml")]
    public class Areas_FAMSDEALER_Views_SalesInvoice_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<FADMS.Areas.FAMSDEALER.Models.SalesInvoiceViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "FAMSDEALER", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "SalesInvoice", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-parsley-validate", new global::Microsoft.AspNetCore.Html.HtmlString("parsley"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ChangePriceForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/SweetAlert/sweetalert2.common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/SweetAlert/sweetalert2.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(150, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Style", async() => {
                BeginContext(167, 85, true);
                WriteLiteral("\r\n    <style>\r\n        .redStar {\r\n            color: red;\r\n        }\r\n    </style>\r\n");
                EndContext();
            }
            );
            BeginContext(255, 557, true);
            WriteLiteral(@"
<div class=""col-12"">
    <div class=""card"" style=""width: 100%;"">
        <div class=""card-body"">
            <div class=""row"">
                <div class=""col-6"">
                    <h5 class=""card-title"" style=""color: black"">Sales Invoice</h5>
                </div>
                <div class=""col-6"">
                    <a href=""/FAMSDEALER/SalesInvoice/InvoiceList"" class=""btn btn-info float-right btn-sm"">Back To List</a>
                </div>
            </div>
            <hr>
            <div class=""container"">

                ");
            EndContext();
            BeginContext(812, 15659, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b18870", async() => {
                BeginContext(935, 453, true);
                WriteLiteral(@"


                    <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group row"">

                                <label for=""binNo"" class=""col-sm-4 col-form-label"">Dealer</label>
                                <div class=""col-sm-8"">
                                    <select class=""form-control input-group-sm"" id=""dearId"" name=""dearId"">
                                        ");
                EndContext();
                BeginContext(1388, 32, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b19722", async() => {
                    BeginContext(1405, 6, true);
                    WriteLiteral("Select");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1420, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 41 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                         foreach (var item in Model.dealers)
                                        {

#line default
#line hidden
                BeginContext(1543, 44, true);
                WriteLiteral("                                            ");
                EndContext();
                BeginContext(1587, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b111624", async() => {
                    BeginContext(1613, 15, false);
#line 43 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                                                Write(item.dealerName);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#line 43 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                               WriteLiteral(item.Id);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1637, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 44 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                        }

#line default
#line hidden
                BeginContext(1682, 549, true);
                WriteLiteral(@"                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <div class=""form-group row"">
                                <label for=""salesInvoiceNo"" class=""col-sm-4 col-form-label"">Sales Invoice No</label>
                                <div class=""col-sm-8"">
                                    <input type=""text"" class=""form-control"" name=""salesInvoiceNo"" id=""salesInvoiceNo""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 2231, "\"", 2279, 1);
#line 53 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 2239, Model.salesInvoiceMaster?.invoiceNumber, 2239, 40, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2280, 333, true);
                WriteLiteral(@" readonly>
                                    <input type=""hidden"" name=""masterId"" id=""masterId"" value=""0"" />
                                </div>

                            </div>
                        </div>
                    </div>

                    <input type=""hidden"" name=""mastersalseId"" id=""mastersalseId""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 2613, "\"", 2643, 1);
#line 61 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 2621, ViewBag.mastersalseId, 2621, 22, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2644, 133, true);
                WriteLiteral(" />\r\n                    <input type=\"hidden\" name=\"salesInvoiceDetailId\" id=\"salesInvoiceDetailId\" value=\"\" />\r\n                    ");
                EndContext();
                BeginContext(2777, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("div", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b116101", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper);
#line 63 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary = global::Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-summary", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2837, 343, true);
                WriteLiteral(@"
                    <div class=""form-group row"">
                        <label for=""customerId"" class=""col-sm-2 col-form-label"">License Number<span style=""float:right;"" class=""redStar"">*</span></label>

                        <div class=""col-sm-4"">
                            <input type=""text"" name=""LicenseNumber"" id=""LicenseNumber""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 3180, "\"", 3241, 1);
#line 68 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 3188, Model.salesInvoiceMaster?.licenseInfo?.licenseNumber, 3188, 53, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3242, 1012, true);
                WriteLiteral(@" class=""form-control"" />
                            <input type=""hidden"" name=""licenseId"" id=""licenseId"" value="""" />
                        </div>
                        <label for=""invoiceDate"" class=""col-sm-2 col-form-label text-left"">Invoice Date</label>
                        <div class=""col-sm-4 input-group"">
                            <input name=""invoiceDate"" id=""invoiceDate"" class=""form-control input-group-sm"" value="""" readonly />
                            <div class=""input-group-prepend"">
                                <i class=""fas fa-calendar-alt form-control input-group-sm input-group-text bg-white""></i>
                            </div>
                        </div>
                    </div>

                    <div class=""form-group row"">

                        <label for=""binNo"" class=""col-sm-2 col-form-label"">Address</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" class=""form-control input-group-sm""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 4254, "\"", 4307, 1);
#line 84 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 4262, Model.salesInvoiceMaster?.licenseInfo?.place, 4262, 45, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(4308, 1008, true);
                WriteLiteral(@" id=""place"" name=""place"" readonly />
                        </div>

                        <label for=""invoiceDate"" class=""col-sm-2 col-form-label text-left"">Payment Date</label>
                        <div class=""col-sm-4 input-group"">
                            <input name=""paymentDate"" id=""paymentDate"" class=""form-control input-group-sm"" value="""" readonly />
                            <div class=""input-group-prepend"">
                                <i class=""fas fa-calendar-alt form-control input-group-sm input-group-text bg-white""></i>
                            </div>
                        </div>
                    </div>




                    <div class=""form-group row"">

                        <label for=""address"" class=""col-sm-2 col-form-label text-left"">License Type</label>
                        <div class=""col-sm-4 input-group"">
                            <textarea name=""licenseTypeId"" id=""licenseTypeId"" class=""form-control input-group-sm"" readonly>");
                EndContext();
                BeginContext(5317, 56, false);
#line 103 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                                                                                                      Write(Model.salesInvoiceMaster?.licenseInfo?.licenseSourseType);

#line default
#line hidden
                EndContext();
                BeginContext(5373, 448, true);
                WriteLiteral(@"</textarea>
                        </div>
                        <label for=""price"" class=""col-sm-2 col-form-label"">VAT Type <span style=""float:right;"" class=""redStar"">*</span></label>
                        <div class=""col-sm-4"">
                            <select class=""form-control"" name=""salesVatTypeId"" id=""salesVatTypeId"" style=""width:100%"" data-parsley-required=""true"" data-parsley-trigger=""keyup"">
                                ");
                EndContext();
                BeginContext(5821, 36, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b122371", async() => {
                    BeginContext(5838, 10, true);
                    WriteLiteral("Select One");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5857, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 109 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                 foreach (var data in Model.salesVatTypes)
                                {

#line default
#line hidden
                BeginContext(5970, 36, true);
                WriteLiteral("                                    ");
                EndContext();
                BeginContext(6006, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b124262", async() => {
                    BeginContext(6032, 9, false);
#line 111 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                                        Write(data.name);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#line 111 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                       WriteLiteral(data.Id);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6050, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 112 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                }

#line default
#line hidden
                BeginContext(6087, 481, true);
                WriteLiteral(@"                            </select>
                        </div>


                    </div>


                    <div class=""form-group row"">
                        <label for=""shiftTo"" class=""col-sm-2 col-form-label"">Ship To<span style=""float:right;"" class=""redStar"">*</span></label>
                        <div class=""col-sm-4"">
                            <textarea name=""shiftTo"" id=""shiftTo"" data-parsley-required=""true"" class=""form-control input-group-sm"">");
                EndContext();
                BeginContext(6569, 32, false);
#line 123 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                                                                                                              Write(Model.salesInvoiceMaster.shiftTo);

#line default
#line hidden
                EndContext();
                BeginContext(6601, 706, true);
                WriteLiteral(@"</textarea>
                        </div>
                    </div>

                    <hr />

                    <div class=""form-group row"">
                        <label for=""itemName"" class=""col-sm-2 col-form-label"">Item Name<span style=""float:right;"" class=""redStar"">*</span></label>
                        <div class=""col-sm-4"">
                            <input type=""text"" class=""form-control"" name=""itemName"" id=""itemName"">
                            <input type=""hidden"" name=""itemId"" id=""itemId"" value=""0"" />
                            <input type=""hidden"" name=""VAT"" id=""VAT"" value=""0"" />
                            <input type=""hidden"" name=""AIT"" id=""AIT"" value=""0"" />
");
                EndContext();
                BeginContext(7400, 2752, true);
                WriteLiteral(@"
                        </div>
                        <label for=""itemSpecification"" class=""col-sm-2 col-form-label"">Item Specification <span style=""float:right;"" class=""redStar"">*</span></label>
                        <div class=""col-sm-4 mb-1"">
                            <input type=""text"" class=""form-control"" name=""itemSpecification"" id=""itemSpecification"">
                            <input type=""hidden"" name=""itemId"" id=""itemId"" value="""" />
                            <input type=""hidden"" name=""itSpecId"" id=""itSpecId"" value=""0"" />
                        </div>

                        <label for=""txtSD"" class=""col-sm-2 col-form-label"">Vat Category</label>
                        <div class=""col-sm-4 mb-1"">
                            <input type=""text"" class=""form-control"" id=""txtVatCat"" name=""txtVatCat"" readonly>
                        </div>

                        <label for=""txtSD"" class=""col-sm-2 col-form-label"">Vat Schedule</label>
                        <div class=""col-sm-4 ");
                WriteLiteral(@"mb-1"">
                            <input type=""text"" class=""form-control"" id=""txtVatSchedule"" name=""txtVatSchedule"" readonly>
                        </div>

                        <label for=""txtSD"" class=""col-sm-2 col-form-label"">Vat Table</label>
                        <div class=""col-sm-4 mb-1"">
                            <input type=""text"" class=""form-control"" id=""txtVatTable"" readonly>
                        </div>

                        <label for=""txtSD"" class=""col-sm-2 col-form-label"">Hs Code</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" class=""form-control"" id=""hsCode"" name=""hsCode"" readonly>
                        </div>
                    </div>
                    <div class=""form-group row"">
                        <label for=""price"" class=""col-sm-2 col-form-label"">Price</label>
                        <div class=""col-sm-4 mb-1"">
                            <input type=""number"" class=""form-control"" name=""price"" id=");
                WriteLiteral(@"""price"">
                        </div>

                        <label for=""txtSD"" class=""col-sm-2 col-form-label"">Vat(%)</label>
                        <div class=""col-sm-4"">
                            <input type=""number"" class=""form-control"" id=""txtVatpercent"" name=""vatPercent"">
                        </div>
                        <label for=""txtSD"" class=""col-sm-2 col-form-label"" hidden>Tax(%)</label>
                        <div class=""col-sm-4"">
                            <input type=""number"" class=""form-control"" id=""txtTaxpercent"" name=""taxPercent"" hidden>
                        </div>
                    </div>


                    <div class=""form-group row"">


");
                EndContext();
                BeginContext(10417, 287, true);
                WriteLiteral(@"                        <label for=""quantity"" class=""col-sm-2 col-form-label"">Quantity </label>
                        <div class=""col-sm-4"">
                            <input type=""number"" min=""1"" class=""form-control"" name=""quantity"" id=""quantity"">
                        </div>
");
                EndContext();
                BeginContext(11181, 2093, true);
                WriteLiteral(@"                    </div>

                    <div class=""form-group row"">
                        <div class=""col-md-12 mt-2"">
                            <button type=""button"" onclick=""AdditemDetails()"" value=""Add"" title=""Add"" class=""btn btn-info"" style=""float:right;""><i class=""fas fa-plus fa-w-1""></i></button>
                        </div>
                    </div>
                    <br />
                    <div class=""form-group row"">
                        <input type=""hidden"" id=""rowCount"" name=""rowCount"" value=""0"" />
                        <input type=""hidden"" id=""detailsId"" name=""detailsId"" value=""0"" />
                        <input type=""hidden"" id=""IsEdit"" name=""IsEdit"" value=""0"" />
                        <div class=""col-12"">
                            <table class=""table table-bordered table-striped table-sm"" id=""tblitemDetails"" data-parsley-required=""true"">
                                <thead>
                                    <tr style=""background-color:#E9ECEF"">");
                WriteLiteral(@"
                                        <th>Item</th>
                                        <th>Item Spac.</th>
                                        <th>Price</th>
                                        <th>Qty</th>
                                        <th>VAT</th>
                                        <th>AIT</th>
                                        <th>Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <div class=""col-sm-8"">&nbsp;</div>
                        <label for=""grossTotal"" class=""col-sm-2 col-form-label"" style=""text-align:right;"">Gross Total </label>
                        <div class=""col-sm-2"">
                            <input type=""text"" class=""fo");
                WriteLiteral("rm-control\" name=\"grossTotal\" id=\"grossTotal\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 13274, "\"", 13334, 1);
#line 238 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 13282, Model.salesInvoiceMaster.NetTotal?.ToString("0.00"), 13282, 52, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(13335, 100, true);
                WriteLiteral(" readonly style=\"text-align:right;\">\r\n                        </div>\r\n                    </div>\r\n\r\n");
                EndContext();
                BeginContext(13965, 352, true);
                WriteLiteral(@"
                    <div class=""form-group row"">
                        <div class=""col-sm-8"">&nbsp;</div>
                        <label for=""grossVAT"" class=""col-sm-2 col-form-label"" style=""text-align:right;"">VAT Amount </label>
                        <div class=""col-sm-2"">
                            <input type=""text"" class=""form-control""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 14317, "\"", 14383, 1);
#line 254 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 14325, Model.salesInvoiceMaster.VATOnTotal?.ToString("0.000000"), 14325, 58, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(14384, 478, true);
                WriteLiteral(@" name=""grossVAT"" id=""grossVAT"" style=""text-align:right;"" readonly>
                        </div>
                    </div>
                    <div class=""form-group row"">
                        <div class=""col-sm-8"">&nbsp;</div>
                        <label for=""grossTax"" class=""col-sm-2 col-form-label"" style=""text-align:right;"">TAX Amount </label>
                        <div class=""col-sm-2"">
                            <input type=""text"" class=""form-control""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 14862, "\"", 14928, 1);
#line 261 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 14870, Model.salesInvoiceMaster.TAXOnTotal?.ToString("0.000000"), 14870, 58, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(14929, 509, true);
                WriteLiteral(@" name=""grossTAX"" id=""grossTAX"" style=""text-align:right;"" readonly>
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <div class=""col-sm-8"">&nbsp;</div>
                        <label for=""netTotal"" class=""col-sm-2 col-form-label"" style=""text-align:right;"">Net Total </label>
                        <div class=""col-sm-2"">
                            <input type=""text"" class=""form-control"" name=""netTotal"" id=""netTotal""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 15438, "\"", 15502, 1);
#line 269 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 15446, Model.salesInvoiceMaster.NetTotal?.ToString("0.000000"), 15446, 56, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(15503, 498, true);
                WriteLiteral(@" readonly style=""text-align:right;"">
                        </div>
                    </div>

                    <div class=""form-group row"" style=""display:none"">
                        <div class=""col-sm-8"">&nbsp;</div>
                        <label for=""netTotal"" class=""col-sm-2 col-form-label"" style=""text-align:right;"">VDS</label>
                        <div class=""col-sm-2"">
                            <input data-parsley-type=""number"" class=""form-control"" name=""vds"" id=""vds""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 16001, "\"", 16060, 1);
#line 277 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
WriteAttributeValue("", 16009, Model.salesInvoiceMaster.vds?.ToString("0.000000"), 16009, 51, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(16061, 403, true);
                WriteLiteral(@" style=""text-align:right;"">
                        </div>
                    </div>

                    <br />
                    <button type=""submit"" value=""Submit"" class=""btn btn-info float-right""><i class=""fas fa-save""></i></button>
                    <button type=""button"" onclick=""Refresh()"" class=""btn btn-danger float-right mr-2""><i class=""fas fa-sync""></i></button>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Area = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16471, 913, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class=""modal fade"" id=""changePriceModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-xl"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Change Price</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">

                    <div class=""row clearfix"">
                        <div class=""col-12"">
                            <div class=""card mb-4"">
                                <!-- Card Header - Dropdown -->
");
            EndContext();
            BeginContext(17670, 818, true);
            WriteLiteral(@"                                <!-- Card Body -->
                                <div class=""card-body"">
                                    <table class=""table table-striped table-bordered"" id=""itemPriceTable"">
                                        <thead>
                                            <tr>
                                                <th>Item Name</th>
                                                <th>Item Specification</th>
                                                <th>Price</th>
                                                <th>Discount</th>
                                                <th>VAT</th>
                                                <th>Action</th>
                                        </thead>
                                        <tbody>
");
            EndContext();
            BeginContext(19441, 254, true);
            WriteLiteral("                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    ");
            EndContext();
            BeginContext(19695, 3993, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b143628", async() => {
                BeginContext(19768, 28, true);
                WriteLiteral("\r\n\r\n                        ");
                EndContext();
                BeginContext(19796, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("div", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b144043", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper);
#line 341 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary = global::Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-summary", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(19856, 3825, true);
                WriteLiteral(@"

                        <div class=""form-group row"">
                            <label for=""itemName"" class=""col-sm-2 col-form-label"">Item Name<span style=""float:right;"" class=""redStar"">*</span></label>
                            <div class=""col-sm-10"">
                                <input type=""text"" data-parsley-required=""true"" data-parsley-trigger=""keyup"" class=""form-control"" name=""itemName"" id=""itemName1"">
                                <input type=""hidden"" name=""itemId"" id=""itemId1"" value=""0"" />
                            </div>
                        </div>

                        <div class=""form-group row"">
                            <label for=""itemSpecification"" class=""col-sm-2 col-form-label"">Item Specification<span style=""float:right;"" class=""redStar"">*</span></label>
                            <div class=""col-sm-6"">
                                <input type=""text"" data-parsley-required=""true"" data-parsley-trigger=""keyup"" class=""form-control"" name=""itemSpecification"" id=");
                WriteLiteral(@"""itemSpecification1"">
                                <input type=""hidden"" name=""itemSpecificationId"" id=""itemSpecificationId1"" value=""0"" />
                            </div>
                            <label for=""purchasePrice"" class=""col-sm-2 col-form-label"">Purchase Price </label>
                            <div class=""col-sm-2"">
                                <input data-parsley-type=""number"" class=""form-control"" style=""text-align:right;"" name=""purchasePrice"" id=""purchasePrice1"" readonly>
                            </div>
                        </div>

                        <div class=""form-group row"">
                            <label for=""profit"" class=""col-sm-2 col-form-label"">Profit (Taka)<span style=""float:right;"" class=""redStar"">*</span></label>
                            <div class=""col-sm-4"">
                                <input data-parsley-type=""number"" data-parsley-required=""true"" data-parsley-trigger=""keyup"" value=""0"" style=""text-align:right;"" class=""form-control"" name=");
                WriteLiteral(@"""profit"" id=""profit1"" readonly>
                            </div>
                            <label for=""price"" class=""col-sm-2 col-form-label"">Price (Taka)<span style=""float:right;"" class=""redStar"">*</span></label>
                            <div class=""col-sm-4"">
                                <input data-parsley-type=""number"" data-parsley-required=""true"" data-parsley-trigger=""keyup"" style=""text-align:right;"" class=""form-control"" name=""price"" id=""price1"">
                            </div>

                        </div>
                        <div class=""form-group row"">

                            <label for=""discount"" class=""col-sm-2 col-form-label"">Discount (%)</label>
                            <div class=""col-sm-4"">
                                <input data-parsley-type=""number"" class=""form-control"" data-parsley-trigger=""keyup"" style=""text-align:right;"" name=""discount"" id=""discount1"">
                            </div>
                            <label for=""vat"" class=""col-sm-2");
                WriteLiteral(@" col-form-label"">VAT (%) </label>
                            <div class=""col-sm-4"">
                                <input data-parsley-type=""number"" class=""form-control"" data-parsley-trigger=""keyup"" value="""" style=""text-align:right;"" name=""vat"" id=""vat11"">
                            </div>
                        </div>

                        <hr>

                        <button type=""button"" value=""Submit"" onclick=""SubmitChangeForm()"" class=""btn btn-succes"" style=""float:right; margin-top:5px;""><i class=""fas fa-save""></i></button>
                        <button type=""button"" onclick=""Refresh()"" class=""btn btn-danger"" style=""float:right; margin-top:5px;margin-right:5px;""><i class=""fas fa-sync""></i></button>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23688, 86, true);
            WriteLiteral("\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(23791, 74, true);
                WriteLiteral("\r\n    <script src=\"https://cdn.jsdelivr.net/npm/flatpickr\"></script>\r\n    ");
                EndContext();
                BeginContext(23865, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b151774", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23923, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(23929, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2b43cc352cd1a1f8d3a192d87ce7f56168955b153032", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23980, 2322, true);
                WriteLiteral(@"

    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css"">
    <script src=""https://code.jquery.com/ui/1.12.1/jquery-ui.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/datepicker/1.0.10/datepicker.min.js""></script>
    <script>


       Common.Ajax('GET', '/FAMSDEALER/SalesInvoice/GetAllRelSupplierCustomerResourseByRoleId', [], 'json', ajaxAllSupplier);

        function ajaxAllSupplier(response) {
            var licenseList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.licenseTypeId = option.licenseTypeId;
                obj.place = option.place; itemSpecification
                obj.label = option.licenseNumber;
                obj.value = option.licenseNumber;
                obj.licId = option.Id;
                licenseList.push(obj);
            });

            $('#LicenseNumber').autocomplete({
                source: licenseList,
 ");
                WriteLiteral(@"               select: function (event, ui) {
                    console.log(ui);
                    $(""#licenseId"").val(ui.item.licId);
                    $(""#place"").val(ui.item.place);
                    $(""#LicenseNumber"").val(ui.item.label);
                    $(""#licenseTypeId"").val(ui.item.licenseTypeId);
                    // $(""#organizationTypeId"").val(ui.item.organizationTypeId);
                    // Common.Ajax('GET', '/global/api/supplier/GetAddressListByOrganizationId/' + ui.item.orgId, [], 'json', ajaxAddress);
                }
            });
        }


        var isEdit = false;
        var masterId = """";
        var licenseId = """";
        $(document).ready(function () {

            var currentDate = new Date();
            $(""#invoiceDate"").datepicker({ dateFormat: ""dd-M-yy"", showAnim: ""scale"", changeMonth: true, changeYear: true, yearRange: ""2010:2030"" }).datepicker(""setDate"", currentDate);
            $(""#paymentDate"").datepicker({ dateFormat: ""dd-M-yy"", sh");
                WriteLiteral(@"owAnim: ""scale"", changeMonth: true, changeYear: true, yearRange: ""2010:2030"" }).datepicker(""setDate"", currentDate);



			$('#itemSpecification').prop('', true);
            //$('#btnChangePrice').prop('disabled', 'disabled');
            // $(""#salesVatTypeId"").val(""");
                EndContext();
                BeginContext(26303, 20, false);
#line 451 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                    Write(Model.salesVatTypeId);

#line default
#line hidden
                EndContext();
                BeginContext(26323, 39, true);
                WriteLiteral("\");\r\n\r\n            $(\"#masterId\").val(\'");
                EndContext();
                BeginContext(26363, 14, false);
#line 453 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                           Write(Model.masterId);

#line default
#line hidden
                EndContext();
                BeginContext(26377, 38, true);
                WriteLiteral("\');\r\n            $(\"#licenseId\").val(\'");
                EndContext();
                BeginContext(26416, 15, false);
#line 454 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                            Write(Model.licenseId);

#line default
#line hidden
                EndContext();
                BeginContext(26431, 920, true);
                WriteLiteral(@"');
             masterId = $(""#masterId"").val();
            licenseId = $(""#licenseId"").val();

            if (masterId != ""0"") {
                isEdit = true;
            }

            $(""#customerName"").select2({
                placeholder: ""Select a Customer"",
                allowClear: true,
            });
            getAllCustomerSelect2();
			//Common.Ajax('GET', '/global/api/patentItem/', [], 'json', ajaxAllInStockItem);

            $(""#invoiceDate"").datepicker({ dateFormat: ""dd-M-yy"", showAnim: ""scale"", changeMonth: true, changeYear: true, yearRange: ""2010:2030"" }).datepicker(""setDate"", new Date());
            $(""#paymentDate"").datepicker({ dateFormat: ""dd-M-yy"", showAnim: ""scale"", changeMonth: true, changeYear: true, yearRange: ""2010:2030"" }).datepicker(""setDate"", new Date());
            if ($(""#salesInvoiceNo"").val() == """") {
                $(""#salesInvoiceNo"").val('");
                EndContext();
                BeginContext(27352, 14, false);
#line 472 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                     Write(ViewBag.SaleNo);

#line default
#line hidden
                EndContext();
                BeginContext(27366, 467, true);
                WriteLiteral(@"');
            }

            $(""#invoiceDate"").change(function () {
                getInvoiceNo();
            });


           // Common.Ajax('GET', '/global/api/getAllRelSupplierCustomerResourseByRoleId', [], 'json', ajaxAllCustomer);
            Common.Ajax('GET', '/FAMSDEALER/ItemInfo/GetAllItemForRequisitionForSales', [], 'json', ajaxAllActiveItem);
            Common.Ajax('GET', '/FAMSDEALER/SalesInvoice/GetAllSalesInvoiceDetailByMasterId/' + '");
                EndContext();
                BeginContext(27834, 14, false);
#line 482 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                                                                                            Write(Model.masterId);

#line default
#line hidden
                EndContext();
                BeginContext(27848, 279, true);
                WriteLiteral(@"', [], 'json', ajaxitemDetailsForEdit);

            $(""#grossDiscount"").keyup(function () {
                CalculationNetTotal();
            });

            $(""#grossVAT"").keyup(function () {
                CalculationNetTotal();
            });

            if ('");
                EndContext();
                BeginContext(28128, 15, false);
#line 492 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
            Write(ViewBag.storeId);

#line default
#line hidden
                EndContext();
                BeginContext(28143, 56, true);
                WriteLiteral("\'> 0)\r\n            {\r\n                $(\'#storeId\').val(");
                EndContext();
                BeginContext(28200, 15, false);
#line 494 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\SalesInvoice\Index.cshtml"
                             Write(ViewBag.storeId);

#line default
#line hidden
                EndContext();
                BeginContext(28215, 32469, true);
                WriteLiteral(@");
            }

            $(""#customerName"").change(function () {
                $(""#licenseId"").val("""");
                $(""#binNo"").val("""");
                $(""#address"").val("""");
                $(""#shiftTo"").val("""");
                if ($(this).val() != """") {
                    var custName = $(this).find(""option:selected"").text();
                    var custId = $(this).val();
                    var orgId = $('option:selected', this).attr('orgId');
                    var binNumber = $('option:selected', this).attr('binNumber');
                    var registeredAddress = $('option:selected', this).attr('registeredAddress');
                    //$(""#customerName"").val(custName);
                    $(""#licenseId"").val(custId);
                    $(""#binNo"").val(binNumber);
                    $(""#address"").val(registeredAddress)
                    $(""#shiftTo"").val(registeredAddress)

                   // Common.Ajax('GET', '/global/api/customer/GetAddressListByResourceId/");
                WriteLiteral(@"' + orgId, [], 'json', ajaxAddress);
                }
            });

        });

		$('#itemName').change(function () {
			if ($(this).val() == '') {
				$('#itemSpecification').prop('readonly', true);
			}
			else {
				$('#itemSpecification').prop('', false);
			}
		})

		$('#btnChangePrice').click(function () {
			var id = $(""#itSpecId"").val();
			if ($(""#itSpecId"").val() != 0) {
				Common.Ajax('GET', '/Sales/SalesInvoice/GetItemPriceFixingsBySpecId?id=' + id, [], 'json', ajaxFunction1, false);

				$('#changePriceModal').modal('show');
			}
		})

		function ajaxFunction1(response) {
			console.log(response);
			var option = """";
            $.each(response, function (i, item) {
                if (item.itemSpecification.discountPersent == null || item.itemSpecification.discountPersent == ""undefined"" || item.itemSpecification.discountPersent == """") {
                    item.itemSpecification.discountPersent = 0;
                }
				option += `<tr>
								<td>${item.it");
                WriteLiteral(@"emSpecification.Item.itemName}</td>
								<td>${item.itemSpecification.specificationName}</td>
								<td>${item.price}</td>
								<td>${item.itemSpecification.discountPersent}</td>
								<td>${item.VAT}</td>
								<td><button title=""Set"" onclick=SETPrice(${item.price},${item.Id}) class=""btn btn-sm btn-info"">Set</button></td>
							</tr>`
			});
			$('#itemPriceTable tbody').empty();
			$('#itemPriceTable tbody').append(option);
        }

        function SETPrice(price, Id) {
            $(""#itemSpecificationId"").val(Id);
            $(""#price"").val(price);
            $('#changePriceModal').modal('hide');
        }

		function ajaxAllInStockItem(response) {
			var GetInStockItemList = [];
			$.each(response, function (id, option) {
				var obj = new Object();
				obj.key = option.Id;
				obj.value = option.itemName;
				GetInStockItemList[GetInStockItemList.length] = obj;
			});
			$('#itemName1').autocomplete({
				source: GetInStockItemList,
				select: function (eve");
                WriteLiteral(@"nt, ui) {

					$(""#itemId1"").val(ui.item.key);
					//Common.Ajax('GET', '/global/api/getAllStockItemSpacificationByItemId/' + ui.item.key, [], 'json', ajaxAllInStockItemSpacification);
				//	Common.Ajax('GET', '/global/api/GetItemSpecificationByitemId/' + ui.item.key, [], 'json', ajaxAllInStockItemSpacification);
				}
			});
		}


		//function ajaxAllInStockItemSpacification(response) {
		//	//console.log(response);
		//	var GetInStockItemSpacificationList = [];
		//	$.each(response, function (id, option) {
		//		var obj = new Object();
		//		obj.key = option.Id;
		//		obj.VAT = option.VAT;
		//		// alert(obj.key);
		//		obj.value = option.specificationName;
		//		GetInStockItemSpacificationList[GetInStockItemSpacificationList.length] = obj;
		//	});
		//	$('#itemSpecification1').autocomplete({
		//		source: GetInStockItemSpacificationList,
		//		select: function (event, ui) {
		//			$(""#itemSpecificationId1"").val(ui.item.key);
		//			$(""#vat1"").val(ui.item.VAT);
		//			// alert(");
                WriteLiteral(@"ui.item.key);
		//			Common.Ajax('GET', '/Purchase/PurchaseOrder/GetItemLastPurchasePriceBySpecId/' + ui.item.key, [], 'json', ajaxgetpurchaserate, false);
		//			//Common.Ajax('GET', '/api/itemPriceFixing/GetBoMPriceBySpecId/' + ui.item.key, [], 'json', ajaxgetpurchaserate, false);
		//			//Common.Ajax('GET', '/api/itemPriceFixing/GetPurchaseProfitFromBoMBySpecId/' + ui.item.key, [], 'json', ajaxGetPurchaseProfitFromBoMBySpecId);


		//		}
		//	});
		//}

		function ajaxgetpurchaserate(response) {
			//console.log(response);
			if (response != null) {
				$(""#purchasePrice1"").val(response.rate);
			} else {
				$(""#purchasePrice1"").val(0);
			}
		}

        function ajaxAllActiveItem(response) {

            var GetInStockItemList = [];
			$.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.itemName;
               // obj.vat = option.itemHsCode.VAT ? option.itemHsCode.VAT : 0.00;
 ");
                WriteLiteral(@"              // obj.ait = option.itemHsCode.AIT ? option.itemHsCode.AIT : 0.00;
                obj.hsCode = option.itemHsCode.hsCode;
                obj.vatCategory = option.itemHsCode.vatCategory;
                obj.vATSchedule = option.itemHsCode.vATSchedule;
                obj.txtVatTable = option.itemHsCode.vatTable;

                GetInStockItemList[GetInStockItemList.length] = obj;
            });
            $('#itemName').autocomplete({
                source: GetInStockItemList,
				select: function (event, ui) {
					console.log(ui)
                    $(""#itemId"").val(ui.item.key);
                  //  $(""#VAT"").val(ui.item.vat);
                    //$(""#AIT"").val(ui.item.ait);
                    $(""#hsCode"").val(ui.item.hsCode);
                    $(""#txtVatCat"").val(ui.item.vatCategory);
                    $(""#txtVatSchedule"").val(ui.item.vATSchedule);
                    $(""#txtVatTable"").val(ui.item.txtVatTable);
					$(""#itemSpecification"").val('');
            ");
                WriteLiteral(@"        //$(""#txtTaxpercent"").val(ui.item.ait);
                    //Common.Ajax('GET', '/global/api/getAllPriceFixedItemSpacificationByItemId/' + ui.item.key, [], 'json', ajaxAllPriceFixedItemSpacification);
                    Common.Ajax('GET', '/FAMSDEALER/ItemInfo/GetItemSpecificationByitemId/?itemId=' + ui.item.key, [], 'json', ajaxAllItemSpacification);

                   // Common.Ajax('GET', '/api/Item/GetItemHSCodeByHsCode/' + ui.item.hsCode, [], 'json', GetItemHSCodebyCode);
                    //Common.Ajax('GET', '/global/api/ItemSpec/' + ui.item.key, [], 'json', ajaxAllPriceFixedItemSpacification);
                }
            });
        }

        function ajaxAllItemSpacification(response) {
            var GetInStockItemSpacificationList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.specificationName = option.specificationName;
                obj.unitName = option");
                WriteLiteral(@".unitName;
                // alert(obj.key);
                obj.value = option.specificationName;
                GetInStockItemSpacificationList[GetInStockItemSpacificationList.length] = obj;
            });
            $('#itemSpecification').autocomplete({
                source: GetInStockItemSpacificationList,
                select: function (event, ui) {
                    $(""#itSpecId"").val(ui.item.key);
                    $(""#itemSpecification"").val(ui.item.specificationName);
                    $(""#unit"").val(ui.item.unitName);
                }
            });
        }

        function GetItemHSCodebyCode(response) {
            // console.log(response);
            $(""#hsCode"").val(response.hsCode);
           // $(""#txtVatpercent"").val(response.VAT ? response.VAT : 0.00);
            // $(""#txtTaxpercent"").val(response.AIT ? response.AIT : 0.00);
            $(""#txtVatTable"").val(response.vatTable.tableName);
            $(""#txtVatSchedule"").val(response.vATSchedule.va");
                WriteLiteral(@"tScheduleName);
            $(""#txtVatCat"").val(response.vatCategory.vatCategoryName);
        }

        function ajaxAllPriceFixedItemSpacification(response) {
            console.log(response);
            var GetInStockItemSpacificationList = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.itemSpecificationName;
                obj.price = option.price;
				obj.SpecId = option.itemSpecificationId;
                obj.VAT = option.VAT;
                obj.discountPersent = option.discountPersent;
                obj.unitName = option.unitName;
                GetInStockItemSpacificationList[GetInStockItemSpacificationList.length] = obj;
            });
            $('#itemSpecification').autocomplete({
                source: GetInStockItemSpacificationList,
                select: function (event, ui) {
                    $(""#itemSpecificationId"").val(ui.item.key);");
                WriteLiteral(@"
                    $(""#price"").val(ui.item.price);
                    $(""#discount"").val(ui.item.discountPersent);
                    $(""#unit"").val(ui.item.unitName);
					$(""#itSpecId"").val(ui.item.SpecId);
                }
            });
        }

        var customer = {};
        function getAllCustomerSelect2() {
         $.ajax({
                type: 'GET',
               // url: '/global/api/getAllRelSupplierCustomerResourseByRoleId',
                dataType: 'json',
                success: function (data) {
                    $('#customerName').append('<option value="""">Select a Customer.</option>');
                    $.each(data, function (key, value) {
                        if (value.resource != null) {
                            if (value.resource.registeredAddress == null) {
                                value.resource.registeredAddress = """";
                            }
                            var option = ""<option registeredAddress='""+value.resource.r");
                WriteLiteral(@"egisteredAddress+ ""' orgId='"" + value.resource.Id + ""'  binNumber='"" + value.resource.binNumber + ""'  value="" + value.Id + "">"" + value.resource.nameEnglish + ""</option>""
                            $('#customerName').append(option);

                            if (isEdit == true) {
                                if (licenseId == value.Id) {
                                    customer = {
                                        ""orgId"": value.resource.Id,
                                        ""binNumber"": value.resource.binNumber,
                                        ""Id"": value.Id,
                                        ""name"": value.resource.nameEnglish,
                                        ""registeredAddress"": value.resource.registeredAddress
                                    }
                                }
                            }
                        }
                    })

                    setCustomer();
                }
            });
        }

   ");
                WriteLiteral(@"     function setCustomer() {

            if (customer != null) {
                $(""#licenseId"").val(customer.Id);
                $(""#customerName"").val(customer.Id).attr(""binNumber"", customer.binNumber).attr(""orgId"", customer.orgId).attr(""registeredAddress"", customer.registeredAddress).trigger('change');
            }
        }



        function ajaxAddress(response) {
            $.each(response, function (key, rc) {

                $(""#address"").val(rc.union + "","" + rc.houseVillage + "","" + rc.blockSector + "","" + rc.postCode + "","" + rc.postOffice + "","" + rc.thana.thanaName + "","" + rc.district.districtName + "","" + rc.division.divisionName);
            });

        }

        function Refresh() {
            location.reload();
        }

        function Remove(Id) {
            chk = confirm('Do you want to delete this?');
            if (chk) {
                location.replace(""/MasterData/Ledger/Delete/"" + Id);
            } else {
                return false;
          ");
                WriteLiteral(@"  }
        }


        function EditTbl(index, itemId, itemName,
            SpecificationId, specificationName, unitName, hsCode, quantity, rate, vatPercentage,vId) {
            var rightIndex = index;
            $(""#IsEdit"").val(1);
            $('#detailsId').val(vId);

            $('#itemName').val(itemName);
            $('#itemId').val(itemId);

            $('#itSpecId').val(SpecificationId);
            $('#itemSpecificationId').val(SpecificationId);
            $('#itemSpecification').val(specificationName);
            $('#hsCode').val(hsCode);
            $('#price').val(rate);
            $('#quantity').val(quantity);
            $('#unit').val(unitName);

            $('#txtVatpercent').val(vatPercentage);
            // $('#txtTaxpercent').val(0);
           // $('#itemNamespec').val(itemName);
            //$('#itemIdspec').val(vId);

            //Common.Ajax('GET', '/MasterData/Item/GetAllSpecificationDetailByitemId/?itemId=' + $(""#itemsId"").val(), [], 'json', aj");
                WriteLiteral(@"axGetAllSpecificationDetailByitemId);

            Common.Ajax('GET', '/api/ItemInfo/GetItemHSCodeByHsCode/' + hsCode, [], 'json', GetItemHSCodebyCode);


            window.localStorage.setItem('holdIndex1', null);
            if (rightIndex != null) {
                window.localStorage.setItem('holdIndex1', rightIndex);
            }
        }



        var index = 1;
        //Add New Item
        function AdditemDetails() {

            var ifExistIndex = window.localStorage.getItem(""holdIndex1"");

            var index = ""0"";
            if (ifExistIndex == ""null"" || ifExistIndex == null) {
                index = $(""#tblitemDetails tbody>tr"").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $(""#tblitemDetails tbody >tr:eq("" + ifExistIndex + "") td:eq(0) .clsId"").val();
            }
            if ($(""#itemSpecId"").val() == """" || $(""#itemSpecId"").val() == ""0"") {
                alert(""Plaese Select Valid Item Specificatio");
                WriteLiteral(@"n."");
                return false
            }

            if ($(""#quantity"").val() == '' || parseFloat($(""#quantity"").val()) <= 0) {
                alert(""Plaese Enter Valid Quantity."");
                return false
            }

            let id = parseInt($(""#detailsId"").val()) ? parseInt($(""#detailsId"").val()) : 0;
            var itemName = $(""#itemName"").val();
            var itemsId = $(""#itemId"").val();
            var itemSpecification = $(""#itemSpecification"").val();
            if ($(""#itemSpecification"").val() == """") {
                alert(""Plaese Enter Valid Item Specification."");
                return false
            }
            //var itemSpecificationId = $(""#itemSpecificationId"").val();

            var itemSpecId = $(""#itSpecId"").val();

            var price = parseFloat($(""#price"").val());
            var rate = $(""#price"").val();
            var quantity = parseFloat($(""#quantity"").val());
            //var vat = $(""#VAT"").val();
            //var ait");
                WriteLiteral(@" = $(""#AIT"").val();
            var vatPer = $(""#txtVatpercent"").val();
            var unit = $(""#unit"").val();
            var hsCode = $(""#hsCode"").val();
            var taxPer = 0;
            vat = price * quantity * vatPer / 100;
           // ait = price * quantity * taxPer / 100;
            ait = 0;
            var discount = 0;
            if ($(""#discount"").val() != """") {
                discount = parseFloat($(""#discount"").val());
            }
            //var totalAmount = (price * quantity + vat + ait) - ((price * quantity) * discount / 100)
            var totalAmount = (price * quantity + vat) - ((price * quantity)/100)

            var RowCount = $(""#tblitemDetails tbody>tr"").length;
            var editOption = parseInt($('#IsEdit').val()) ? parseInt($('#IsEdit').val()) : 0;

            for (i = 0; i <= RowCount; i++) {
                var _itemSpecificationId = $(""#itemSpecId"" + i).val();
                if (_itemSpecificationId == itemSpecId && editOption == 0) {
 ");
                WriteLiteral(@"                   alert('You have already added this Item!');
                    return false
                }
            }
            var dtTable = $(""#tblitemDetails"");
            var tableBody = dtTable.find('tbody');

            var _itemName = itemName.replace('""', """");
            var _specificationName = itemSpecification.replace('""', """");
            var trHtml = '<tr id=' + index + '>' +
                '<td>' + itemName + '<input type=""hidden"" name=""id"" class=""clsId"" value=""' + id + '""><input type=""hidden"" id=""itemId' + index + '"" name=""itemId"" class=""clsitemId"" value=""' + itemsId + '""/></td>' +
                '<td>' + itemSpecification +
                '<input type=""hidden"" id=""itemSpecId' + index + '"" name=""itemSpecId[]"" class=""clsitemSpecificationId"" value=""' + itemSpecId + '""/></td>' +
                '<td>' + price.toFixed(6) + '<input type=""hidden"" id=""price' + index + '"" name=""rate[]"" class=""clsprice"" value=""' + price + '""/></td>' +
                '<td>' + quantity + '");
                WriteLiteral(@"<input type=""hidden"" id=""quantity' + index + '"" name=""tblQuantity[]"" class=""clsquantity"" value=""' + quantity + '""/></td>' +
                '<td style=""text-align:right;"">' + vat + '<input class=""clsvatAmount"" type=""hidden"" id=""vat' + index + '"" name=""vattotal[]""  value=""' + vat + '""/></td>' +
                '<input class=""clsvatPercentage"" type=""hidden"" id=""vat' + index + '"" name=""vatPercentage[]""  value=""' + vatPer + '""/>' +
                '<td style=""text-align:right;"">' + ait + '<input class=""clstaxAmount"" type=""hidden"" id=""tax' + index + '"" name=""taxtotal[]""  value=""' + ait + '""/></td>' +
                '<input class=""clstaxPercentage"" type=""hidden"" id=""tax' + index + '"" name=""taxPercentage[]""  value=""' + taxPer + '""/>' +

                '<td>' + totalAmount.toFixed(6) + '<input type=""hidden"" id=""totalAmount' + index +'"" name=""lineTotal[]"" class=""clstotalAmount"" value=""' + totalAmount + '""/></td>' +
                '<td><a href=""javascript:void(0)""style=""background-color:red;border-color:red"" ");
                WriteLiteral(@"data-toggle=""tooltip"" title=""Delete"" class=""btn btn-danger btn-xs"" onclick=""Delete(' + index + ')""><i class=""fa fa-trash""></i></a>&nbsp;&nbsp;' +
                '<a onclick=""EditTbl(' + index + ','
                + itemsId + ', ' +
                ""'"" + _itemName + ""',"" +
                + itemSpecId + ',' +
                ""'"" + _specificationName + ""'"" + ',' +
                ""'"" + unit + ""'""+ ',' +
                ""'"" + hsCode + ""',"" +
                quantity + ',' +
                price + ',' +
                vatPer + ',' +
                taxPer + ', '
                + id +
                 ')"" href=""javascript:void(0)"" title=""Edit"" class=""btn btn-success btn-xs"" > <i class=""fa fa-edit""></i></a >' +

                '</tr>';
            //tableBody.append(trHtml);
            if (ifExistIndex == null || ifExistIndex == ""null"") {
                tableBody.append(trHtml);
            }
            else {
                var rowUpdate = $(""#tblitemDetails tbody >tr:eq("" + ifExistI");
                WriteLiteral(@"ndex + "")"");
                rowUpdate.replaceWith(trHtml);
                window.localStorage.setItem(""holdIndex"", null);
                ifExistIndex = null;
            }
            index = index + 1;
            $(""#rowCount"").val(index);

            ClearLineItem();
           // CalculateGrossTotal();
           // CalculateGrossVAT();
            fnGrandTotal();
        }
        //EDIT
        function ajaxitemDetailsForEdit(response) {
            var ifExistIndex = window.localStorage.getItem(""holdIndex1"");
            var index = ""0"";
            if (ifExistIndex == ""null"" || ifExistIndex == null) {
                index = $(""#tblitemDetails tbody>tr"").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $(""#tblitemDetails tbody >tr:eq("" + ifExistIndex + "") td:eq(0) .clsId"").val();
            }
            $(""#tblitemDetails tbody>tr"").empty();

             // var dtTable = $(""#tblitemDetails"");
            //var tabl");
                WriteLiteral(@"eBody = dtTable.find('tbody');
            if (response != null) {
                $.each(response, function (i, item) {
                    //var totalAmount = (item.rate * item.quantity) - ((item.rate * item.quantity) * item.itemPriceFixing.discountPersent / 100)
                    var totalAmount = (item.rate * item.quantity) - ((item.rate * item.quantity)/ 100)
                    index = $(""#tblitemDetails tbody>tr"").length;
                    var dtTable = $(""#tblitemDetails"");
                    var tableBody = dtTable.find('tbody');

                    var str = item.itemSpecification.Item.itemName;
                    var itemName = str.replace('""', """");
                    str = item.itemSpecification.specificationName;
                    var specificationName = str.replace('""', """");

                    var trHtml = '<tr id=' + index + '>' +
                        '<td>' + itemName + '<input type=""hidden"" name=""id"" class=""clsId"" value=""' + item.Id + '""><input type=""hidden"" id=""");
                WriteLiteral(@"itemId' + index + '"" name=""itemId"" class=""clsitemId"" value=""' + item.itemSpecification.Item.Id + '""/></td>' +
                        '<td>' + specificationName +
                        '<input type=""hidden"" id=""itemSpecId' + index + '"" name=""itemSpecId[]"" class=""clsitemSpecificationId"" value=""' + item.itemSpecification.Id + '""/></td>' +
                        '<td>' + item.rate.toFixed(6) + '<input type=""hidden"" id=""price' + index + '"" name=""rate[]"" class=""clsprice"" value=""' + item.rate + '""/></td>' +
                        '<td>' + item.quantity + '<input type=""hidden"" id=""quantity' + index + '"" name=""tblQuantity[]"" class=""clsquantity"" value=""' + item.quantity + '""/></td>' +
                        '<td style=""text-align:right;"">' + item.vatAmount + '<input class=""clsvatAmount"" type=""hidden"" id=""vat' + index + '"" name=""vattotal[]""  value=""' + item.vatAmount + '""/></td>' +
                        '<input class=""clsvatPercentage"" type=""hidden"" id=""vat' + index + '"" name=""vatPercentage[]""  value=""' + ");
                WriteLiteral(@"item.vatPercentage + '""/>' +
                        '<td style=""text-align:right;"">' + item.taxAmount + '<input class=""clstaxAmount"" type=""hidden"" id=""tax' + index + '"" name=""taxtotal[]""  value=""' + item.taxAmount + '""/></td>' +
                        '<input class=""clstaxPercentage"" type=""hidden"" id=""tax' + index + '"" name=""taxPercentage[]""  value=""' + item.taxPercentage + '""/>' +
                        '<td>' + item.lineTotal.toFixed(6) + '<input type=""hidden"" id=""totalAmount' + index + '"" name=""lineTotal[]"" class=""clstotalAmount"" value=""' + item.lineTotal.toFixed(6) + '""/></td>' +
                        '<td><a href = ""javascript:void(0)"" style = ""background-color:red;border-color:red;"" data-toggle=""tooltip"" title = ""Delete"" class=""btn btn-danger btn-xs"" onclick = ""Delete(' + index + ')"" > <i class=""fa fa-trash""></i></a><a onclick=""EditTbl(' + index + ','
                        + item.itemSpecification.Item.Id + ','
                        + ""'"" + itemName + ""',""+
                        item.i");
                WriteLiteral(@"temSpecification.Id +
                        "",'"" + specificationName+""',""+
                        ""'"" + item.itemSpecification.Item.unit.unitName + ""',"" +
                        ""'"" + item.itemSpecification.Item.itemHsCode.hsCode + ""',"" +
                        item.quantity + ','+
                        item.rate + ',' +
                        item.vatPercentage + ',' +
                        item.Id
                        + ')"" href=""javascript:void(0)"" style = ""margin-left: 1px;"" title=""Edit"" class=""btn btn-success btn-xs"" ><i class=""fa fa-edit""></i></a></td ></tr >';



                    tableBody.append(trHtml);
                    index = index + 1;
                    $(""#rowCount"").val(index);
                })
            }
            //ClearLineItem();
            //CalculateGrossTotal();
        }

        //function Delete(indx) {
        //    $(""#tblitemDetails #"" + indx).remove();
        //    CalculateGrossTotal();
        //    CalculateGrossVAT();
     ");
                WriteLiteral(@"   //    return false;
        //}

        function ClearLineItem() {
            $('#detailsId').val('');
            $(""#IsEdit"").val(0);

            $(""#itemName"").val('');
            $(""#itemId"").val('0');
            $(""#itemSpecification"").val('');
            $(""#itemSpecificationId"").val('0');
            $(""#price"").val('');
            $(""#quantity"").val('');
            $(""#discount"").val('');
            $(""#unit"").val('');
            $(""#txtVatpercent"").val('');
            $(""#txtTaxpercent"").val('');

            $(""#txtVatCat"").val('');
            $(""#txtVatSchedule"").val('');
            $(""#txtVatTable"").val('');
            $(""#hsCode"").val('');
            window.localStorage.setItem(""holdIndex1"", null);
            ifExistIndex = null;
        }

        function CalculateGrossTotal() {
            var grossTotal = 0;
            var RowCount = parseInt($(""#rowCount"").val());
            for (i = 1; i <= RowCount; i++) {
                var _totalAmount ");
                WriteLiteral(@"= 0;
                if (parseFloat($(""#totalAmount"" + i).val()) > 0 ) {
                    _totalAmount = parseFloat($(""#totalAmount"" + i).val());
                }
                grossTotal = grossTotal + _totalAmount;
            }
            $(""#grossTotal"").val(grossTotal.toFixed(6));
            CalculationNetTotal();
        }

        function CalculateGrossVAT() {
            var grossVAT = 0;
            var grossTAX = 0;
            var RowCount = parseInt($(""#rowCount"").val());
            for (i = 1; i <= RowCount; i++) {
                var _grossVAT = 0;
                var _grossTAX = 0;
                if (parseFloat($(""#vat"" + i).val()) > 0) {
                    _grossVAT = parseFloat($(""#vat"" + i).val());
                }
                if (parseFloat($(""#tax"" + i).val()) > 0) {
                    _grossTAX = parseFloat($(""#tax"" + i).val());
                }
                grossTAX = grossTAX + _grossTAX;
                grossVAT = grossVAT + _grossVAT;
   ");
                WriteLiteral(@"         }
            $(""#grossVAT"").val(grossVAT.toFixed(6));
            $(""#grossTAX"").val(grossTAX.toFixed(6));
            CalculationNetTotal();
        }

        function CalculationNetTotal() {
            var grossTotal = 0; var grossDiscount = 0; var grossVAT = 0;
            var vatAmount = 0;
            var taxAmount = 0;
            if ($(""#grossTotal"").val() != """") {
                grossTotal = parseFloat($(""#grossTotal"").val());
            }

            //if ($(""#grossDiscount"").val() != """") {
            //    grossDiscount = parseFloat($(""#grossDiscount"").val());
            //}

            //if ($(""#grossVAT"").val() != """") {
            //    grossVAT = parseFloat($(""#grossVAT"").val());
            //}
            $("".clsvatAmount"").each(function () {
                vatAmount += +parseFloat($(this).val().replace(/,/g, '')) ? parseFloat($(this).val().replace(/,/g, '')) : 0;
                $(""#vatPercent"").val(vatAmount);
            });
            $("".clstax");
                WriteLiteral(@"Amount"").each(function () {
                taxAmount += +parseFloat($(this).val().replace(/,/g, '')) ? parseFloat($(this).val().replace(/,/g, '')) : 0;
                $(""#taxPercent"").val(taxAmount);
            });
            var netAfterDisc = (grossTotal);

            //var netWithVAT = (netAfterDisc + (netAfterDisc * grossVAT / 100));
            var netWithVAT = (netAfterDisc);

            $(""#netTotal"").val(netWithVAT.toFixed(6));
    }
        function getInvoiceNo() {

            let invoiceDate = $('#invoiceDate').val();
            Common.Ajax('GET', '/api/global/getInvoiceNo/' + invoiceDate, [], 'json', setAutoNumber);
        }

        function setAutoNumber(response) {
        $('#salesInvoiceNo').val(response);
        }

        function SubmitChangeForm() {
            var data = $(""#ChangePriceForm"").serialize();

            if ($(""#itemName1"").val() == """") {
                swal('Warning', 'Enter Item!!', 'warning');
                return false;
          ");
                WriteLiteral(@"  }
            if ($(""#itemSpecification1"").val() == """") {
                swal('Warning', 'Enter ItemSecification!!', 'warning');
                return false;
            }
            if ($(""#price1"").val() == """") {
                swal('Warning', 'Enter Price!!', 'warning');
                return false;
            }
            if ($(""#vat1"").val() == """") {
                swal('Warning', 'Enter VAT!!', 'warning');
                return false;
            }
            var itemName = $(""#itemName1"").val();
            var itemSpecification = $(""#itemSpecification1"").val();
            var price1 = $(""#price1"").val();
            var discount1 = $(""#discount1"").val();
            var vat1 = $(""#vat1"").val();


            swal({
                title: 'Are you sure?', text: 'Do you want to Save this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, Save it!'
            }).then(function () {
     ");
                WriteLiteral(@"           $.ajax({
                    type: ""POST"",
                    url: ""/Sales/ItemPriceFixing/ChangePrice"",
                    data: data,
                    success: function (response) {
                        swal('', 'Saved Successfully!', 'success');
                        var option = """";
                        option += `<tr>
								<td>${itemName}</td>
								<td>${itemSpecification}</td>
								<td>${price1}</td>
								<td>${discount1}</td>
								<td>${vat1}</td>
								<td><button title=""Set"" onclick=SETPrice(${price1},${response}) class=""btn btn-sm btn-info"">Set</button></td>
							</tr>`;

                        $('#itemPriceTable tbody').append(option);
                        $(""#itemName1"").val('');
                        $(""#itemSpecification1"").val('');
                        $(""#price1"").val('');
                        $(""#discount1"").val('');
                        $(""#vat1"").val('');
                    }
                });
            }");
                WriteLiteral(@");
            return false;
        }


        function fnGrandTotal() {
            var tax = 0;
            var vat = 0;
            var totalAmount = 0;
            var vatAmount = 0;
            var taxAmount = 0;
            var netTotal = 0;

            $("".clstotalAmount"").each(function () {
                totalAmount += +parseFloat($(this).val().replace(/,/g, '')) ? parseFloat($(this).val().replace(/,/g, '')) : 0;
            });
            $("".clsvatAmount"").each(function () {
                vatAmount += +parseFloat($(this).val().replace(/,/g, '')) ? parseFloat($(this).val().replace(/,/g, '')) : 0;
                $(""#grossVAT"").val(vatAmount);
            });
            $("".clstaxAmount"").each(function () {
                taxAmount += +parseFloat($(this).val().replace(/,/g, '')) ? parseFloat($(this).val().replace(/,/g, '')) : 0;
                $(""#grossTAX"").val(taxAmount);
            });



            netTotal = parseFloat(totalAmount);

            $(""#gross");
                WriteLiteral(@"TAX"").val(taxAmount.toFixed(6));
            $(""#grossVAT"").val(vatAmount.toFixed(6));
            $(""#grossTotal"").val(netTotal.toFixed(6));
            $(""#netTotal"").val(netTotal.toFixed(6));
        }

        function Delete(index) {
            swal({
                title: 'Are you sure?', text: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {
                $(""#tblitemDetails #"" + index).remove();
                swal('', 'Deleted Successfully!', 'success');
                fnGrandTotal();
            });

        }


    </script>
");
                EndContext();
            }
            );
            BeginContext(60687, 8, true);
            WriteLiteral("\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<FADMS.Areas.FAMSDEALER.Models.SalesInvoiceViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
