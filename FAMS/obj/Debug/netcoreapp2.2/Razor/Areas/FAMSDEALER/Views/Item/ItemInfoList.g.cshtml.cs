#pragma checksum "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ed8194c963e898176a48d442bcf2dda825049831"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_FAMSDEALER_Views_Item_ItemInfoList), @"mvc.1.0.view", @"/Areas/FAMSDEALER/Views/Item/ItemInfoList.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/FAMSDEALER/Views/Item/ItemInfoList.cshtml", typeof(AspNetCore.Areas_FAMSDEALER_Views_Item_ItemInfoList))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\_ViewImports.cshtml"
using FADMS;

#line default
#line hidden
#line 2 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\_ViewImports.cshtml"
using FADMS.Models;

#line default
#line hidden
#line 3 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\_ViewImports.cshtml"
using FADMS.Areas.FAMSDEALER;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed8194c963e898176a48d442bcf2dda825049831", @"/Areas/FAMSDEALER/Views/Item/ItemInfoList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2d6da59ad1f56a285e9f316e27282c43cacd5d73", @"/Areas/FAMSDEALER/Views/_ViewImports.cshtml")]
    public class Areas_FAMSDEALER_Views_Item_ItemInfoList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<FADMS.Areas.FAMSDEALER.Models.ItemViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
  
    ViewData["Title"] = "ItemList";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(143, 866, true);
            WriteLiteral(@"
<div style=""width:98%!important"">
    <div class=""row clearfix"">
        <div class=""col-12"">
            <div class=""card mb-4"">
                <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
                    <h6 class=""m-0 font-weight-bold text-primary"">title</h6>
                </div>
                <div class=""card-body"">
                    <table class=""table table-striped table-sm table-bordered"" id=""itemTable"">
                        <thead>
                            <tr>
                                <th>itemCode</th>
                                <th>itemName</th>
                                <th>unitId</th>
                                <th>HS Code</th>
                                <th>action</th>
                        </thead>
                        <tbody>
");
            EndContext();
#line 25 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                             foreach (var data in Model.items)
                            {

#line default
#line hidden
            BeginContext(1104, 78, true);
            WriteLiteral("                                <tr>\r\n                                    <td>");
            EndContext();
            BeginContext(1183, 13, false);
#line 28 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                                   Write(data.itemCode);

#line default
#line hidden
            EndContext();
            BeginContext(1196, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(1244, 13, false);
#line 29 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                                   Write(data.itemName);

#line default
#line hidden
            EndContext();
            BeginContext(1257, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(1305, 18, false);
#line 30 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                                   Write(data.unit.unitName);

#line default
#line hidden
            EndContext();
            BeginContext(1323, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(1371, 23, false);
#line 31 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                                   Write(data.itemHsCode?.hsCode);

#line default
#line hidden
            EndContext();
            BeginContext(1394, 128, true);
            WriteLiteral("</td>\r\n                                    <td>\r\n                                        <a class=\"btn btn-success\" title=\'Edit\'");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 1522, "\"", 1906, 37);
            WriteAttributeValue("", 1532, "Edit(", 1532, 5, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1537, data.Id, 1537, 8, false);

#line default
#line hidden
            WriteAttributeValue("", 1545, ",\'", 1545, 2, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1547, data.itemName, 1547, 14, false);

#line default
#line hidden
            WriteAttributeValue("", 1561, "\',", 1561, 2, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1563, data.unitId, 1563, 12, false);

#line default
#line hidden
            WriteAttributeValue("", 1575, ",\'", 1575, 2, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1577, data.itemCode, 1577, 14, false);

#line default
#line hidden
            WriteAttributeValue("", 1591, "\',\'", 1591, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1594, data.itemDescription, 1594, 21, false);

#line default
#line hidden
            WriteAttributeValue("", 1615, "\',", 1615, 2, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1617, data.parentId, 1617, 14, false);

#line default
#line hidden
            WriteAttributeValue("", 1631, ",\'", 1631, 2, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1633, data.itemHsCodeId, 1633, 18, false);

#line default
#line hidden
            WriteAttributeValue("", 1651, "\',\'", 1651, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1654, data.itemHsCode?.Id, 1654, 20, false);

#line default
#line hidden
            WriteAttributeValue("", 1674, "\',\'", 1674, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1677, data.costingMethod, 1677, 19, false);

#line default
#line hidden
            WriteAttributeValue("", 1696, "\',\'", 1696, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1699, data.reorderQty, 1699, 16, false);

#line default
#line hidden
            WriteAttributeValue("", 1715, "\',\'", 1715, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1718, data.productionTypeId, 1718, 22, false);

#line default
#line hidden
            WriteAttributeValue("", 1740, "\',\'", 1740, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1743, data.itemHsCode?.CD, 1743, 20, false);

#line default
#line hidden
            WriteAttributeValue("", 1763, "\',\'", 1763, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1766, data.itemHsCode?.TTI, 1766, 21, false);

#line default
#line hidden
            WriteAttributeValue("", 1787, "\',\'", 1787, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1790, data.itemHsCode?.AIT, 1790, 21, false);

#line default
#line hidden
            WriteAttributeValue("", 1811, "\',\'", 1811, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1814, data.itemHsCode?.VAT, 1814, 21, false);

#line default
#line hidden
            WriteAttributeValue("", 1835, "\',\'", 1835, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1838, data.itemHsCode?.RD, 1838, 20, false);

#line default
#line hidden
            WriteAttributeValue("", 1858, "\',\'", 1858, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1861, data.itemHsCode?.AT, 1861, 20, false);

#line default
#line hidden
            WriteAttributeValue("", 1881, "\',\'", 1881, 3, true);
#line 33 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
WriteAttributeValue("", 1884, data.itemHsCode?.SD, 1884, 20, false);

#line default
#line hidden
            WriteAttributeValue("", 1904, "\')", 1904, 2, true);
            EndWriteAttribute();
            BeginContext(1907, 42, true);
            WriteLiteral(" href=\"#\"><i class=\"fa fa-edit\"></i></a>\r\n");
            EndContext();
            BeginContext(2094, 82, true);
            WriteLiteral("                                    </td>\r\n                                </tr>\r\n");
            EndContext();
#line 37 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                            }

#line default
#line hidden
            BeginContext(2207, 566, true);
            WriteLiteral(@"
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""addClusterModel"" tabindex=""-1"" role=""dialog"" style=""padding-left:2px"" aria-labelledby=""exampleaddClusterModel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" style=""max-width:1400px"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <div class=""row"" style=""width:100%;"">
                    <div class=""col-sm-3"">
");
            EndContext();
            BeginContext(2883, 785, true);
            WriteLiteral(@"                    </div>
                    <div class=""col-sm-8"">
                        <h2 class=""modal-title text-center"" id=""exampleModalLabel"" style=""padding-top: 14px;"">Item Tree Sheet </h2>
                    </div>
                    <div class=""col-sm-1"">
                        <button class=""close"" type=""button"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">×</span>
                        </button>
                    </div>
                </div>

            </div>
            <div class=""modal-body"">
                <div class=""row"" id=""organoDiv"">

                </div>
            </div>
            <div class=""modal-footer"">

            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3685, 106, true);
                WriteLiteral("\r\n    <script src=\"https://code.jquery.com/jquery-migrate-3.0.0.min.js\" type=\"text/javascript\"></script>\r\n");
                EndContext();
                BeginContext(3920, 8257, true);
                WriteLiteral(@"    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"" type=""text/javascript""></script>
    <script src=""https://d3js.org/d3.v3.min.js"" type=""text/javascript""></script>
    <script>
        var formdata = new FormData();
        var Indexattach = 0;
        $(document).ready(function () {
            $(""#Item"").addClass(""active"");
            $('#itemTable').DataTable();
            $(""#specCategory"").change(function () {
                $('#catValue').val('');
            });


            //$(document).on('click', '#btndel', function () {
            //    $(this).closest('#del').toggleClass('strike').fadeOut('slow', function () { $(this).remove(); });
            //});










            $(""#armsTypeId"").change(function () {
               // $('#catValue').val('');
                var id = $(""#armsTypeId"").val();
                var value = $(""#armsTypeId option:selected"").text();
                $(""#parentId"").val(id);


            }");
                WriteLiteral(@");
            // alert(""bashar"");
           // Common.Ajax('GET', '/global/api/patentCatItem/', [], 'json', GetItemList);
            Common.Ajax('GET', '/FAMSDEALER/Item/GetItemHSCode', [], 'json', GetItemHSCode);
           // Common.Ajax('GET', '/api/Item/GetItemCode', [], 'json', GetItemCode);

            if (window.File && window.FileList && window.FileReader) {
                var filesInput = document.getElementById(""files"");

                //$(""#tbodyAttachment"").empty();
                filesInput.addEventListener(""change"", function (event) {

                    var files = event.target.files; //FileList object
                    var output = document.getElementById(""result"");

                    for (var i = 0; i < files.length; i++) {
                        var file = files[i];
                        Indexattach = Indexattach + 1;
                        var attach_id = ""files"";
                        var FileSize = $('#' + attach_id)[0].files[0].size;
               ");
                WriteLiteral(@"         var fileName = $('#' + attach_id)[0].files[0].name;
                        var path = URL.createObjectURL(event.target.files[0]);
                        //$('#btnSave').prop('disabled', false);

                        var filesizekb = (parseFloat(FileSize) / 1024).toFixed(0);

                        var dtTable = $(""#dtAttachment"");
                        var tableBody = dtTable.find('tbody');

                        if (!file.type.match('image')) //file
                        {
                            var ext = this.value.match(/\.(.+)$/)[1];
                            var picReader = new FileReader();
                            picReader.addEventListener(""load"", function (event) {
                                var attach_id = ""files"";
                                var picFile = event.target;

                                tableBody.append(
                                    '<tr id=' + Indexattach + '>' +
                                    '<td>' + fileName +");
                WriteLiteral(@" '</td>' +
                                    //'<td>' + subject + '<input type=""text"" id=""txtTACType' + subject + '"" class =""clsTACType"" style=""display:none"" value=""' + subject + '""/></td>' +
                                    '<td><i class=""fa fa-file"" style=""font-size:40px;color:lightgray""> </i></td>' +
                                    '<td style=""display:none""><input type=""text"" class=""clsFileTitle""  name=""Subjects"" value=""' + Indexattach + 'A"" /><input type=""text"" value=""' + path + '"" name=""Files"" style=""display:none""/></td>' +
                                    '<td><a href=' + ""'"" + path + ""'"" + '  target=""_blank""  title=""Preview""  class=""btn btn-info btn-sm""><i class=""fa fa-eye""></i></a>' + '&nbsp;&nbsp;' + '<a href=""javascript:void(0)"" class=""btn btn-danger btn-sm"" title=""Delete"" onclick=""DeleteImage(' + Indexattach + ',' + ""'"" + fileName + ""'"" + ')"">Delete</a></td>' +
                                    '</tr>')
                            });
                        }
                ");
                WriteLiteral(@"        else {
                            var picReader = new FileReader();
                            picReader.addEventListener(""load"", function (event) {
                                var attach_id = ""files"";
                                var picFile = event.target;
                                tableBody.append(
                                    '<tr id=' + Indexattach + '>' +
                                    '<td>' + fileName + '</td>' +
                                    '<td style=""height:50px;width: 45px; background - color:lightgray""><img src=' + ""'"" + path + ""'"" + ' height=50 width=45 /></td>' +
                                    '<td style=""display:none""><input type=""text"" name=""Subjects""  class=""clsFileTitle"" value=""' + Indexattach + 'A"" /><input type=""text"" value=""' + path + '"" name=""Files"" style=""display:none""/></td>' +
                                    '<td><a href=' + ""'"" + path + ""'"" + '  target=""_blank""  title=""Preview""  class=""btn btn-info btn-sm""><i class=""fa fa-");
                WriteLiteral(@"eye""></i></a>' + '&nbsp;&nbsp;' + '<a href=""javascript:void(0)"" class=""btn btn-danger btn-sm"" title=""Delete"" onclick=""DeleteImage(' + Indexattach + ',' + ""'"" + fileName + ""'"" + ')"">Delete</a></td>' +
                                    '</tr>')
                            });
                        }
                        picReader.readAsDataURL(file);
                    }
                    var fileInput = document.getElementById('files');
                    for (i = 0; i < fileInput.files.length; i++) {
                        formdata.append(fileInput.files[i].name, fileInput.files[i]);
                    }
                });
            }

            else {
                console.log(""Your browser does not support File API"");
            }
            $(""#btnSave"").click(function (e) {

                if ($(""#itemName"").val() == """") {
                    alert(""Please Enter Item Name.!!!"");
                    return false;
                }
                if ($(""#parentI");
                WriteLiteral(@"d"").val() == ""0"") {
                    alert(""Please Enter Category.!!!"");
                    return false;
                }
                if ($(""#unitId"").val() == """" || $(""#unitId"").val() == null) {
                    alert(""Please Enter Unit.!!!"");
                    return false;
                }
                if ($(""#itemHsCodeId"").val() == ""0"") {
                    alert(""Please Enter HS Code.!!!"");
                    return false;
                }

                e.preventDefault();

                var form = $(""#frmItem"");
                $.ajax({
                    url: '/FAMSDEALER/Item/ItemList',
                    data: form.serialize(),
                    type: 'POST',
                    success: function (records) {
                        var Attachment = 0;
                        Attachment = $(""#dtAttachment tbody>tr"").length;
                        if (Attachment > 0) {
                            UploadAttachment(records);
                      ");
                WriteLiteral(@"  }
                        else {
                            swal({
                                title: '', text: 'Save Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                            }).then(function () {
                                window.location.href = ""/FAMSDEALER/Item/ItemList"";
                            });
                        }
                    }
                });
            });

        });

        function UploadAttachment(id) {

            if (window.FormData !== undefined) {
                var arrayFileAtach = [];
                var indexFileAtach = 1;
                var $FileAtach = $('.clsFileTitle');
                $FileAtach.each(function () {
                    arrayFileAtach.push($(this).val());
                    formdata.append(""id"", id);
                    formdata.append(""arrayFileAtach"", arrayFileAtach);
                    arrayFileAtach = [];
          ");
                WriteLiteral("      });\r\n\r\n                $.ajax({\r\n                    url: \'");
                EndContext();
                BeginContext(12178, 46, false);
#line 246 "F:\ARIF\FAMS Dealer\Project\Fire_Arms_Dealer_Management_System\FAMS\Areas\FAMSDEALER\Views\Item\ItemInfoList.cshtml"
                     Write(Url.Action("UploadAttachment", "Item", "http"));

#line default
#line hidden
                EndContext();
                BeginContext(12224, 29679, true);
                WriteLiteral(@"',
                    type: ""POST"",
                    contentType: false,
                    data: formdata,
                    dataType: ""json"",
                    processData: false,


                })
                    .done(function (data) {
                        swal({
                            title: '', text: 'Save Successfully!', type: 'success', showCancelButton: false, confirmButtonColor: '#3085d6', confirmButtonText: 'Ok!',
                        }).then(function () {
                            window.location.href = ""/MasterData/Item/Index"";
                        });
                    })
                    .fail(function () {
                        $('#btnSave').prop('disabled', false);
                        alert(""Uploading failed"");
                    })
            } else {
                alert(""FormData is not supported."");
            }
        }
        function DeleteImage(Indexattach, fileName) {
            formdata.delete(fileName);
   ");
                WriteLiteral(@"         $(""#"" + Indexattach).remove();
            Indexattach = Indexattach - 1;
            return false;
        }
        function GetItemCode(response) {
            console.log(response);
            $(""#itemCode"").val(response);
        }

        function GetItemHSCode(response) {

            var lstPOP = [];
            $.each(response, function (i, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.hsCode;
                obj.CD = option.CD;
                obj.SD = option.SD;
                obj.VAT = option.VAT;
                obj.AIT = option.AIT;
                obj.AT = option.AT;
                obj.RD = option.RD;
                obj.EXD = option.EXD;
                obj.TTI = option.TTI;
                obj.vatcatName = option.vatCategory.vatCategoryName;
                obj.vattabName = option.vatTable.tableName;
                obj.vatscheduleName = option.vATSchedule.vatScheduleName;
     ");
                WriteLiteral(@"           lstPOP[lstPOP.length] = obj;
            });
            $('#itemHsCode').autocomplete({
                source: lstPOP,
                select: function (event, ui) {
                    //alert(ui.item.vattabName);
                    $(""#itemHsCodeId"").val(ui.item.key);
                    $(""#txtVatTable"").val(ui.item.vattabName);
                    $(""#txtVatSchedule"").val(ui.item.vatscheduleName);
                    $(""#txtVatCat"").val(ui.item.vatcatName);
                    $(""#txtCD"").val(ui.item.CD);
                    $(""#txtTTI"").val(ui.item.TTI);
                    $(""#txtAIT"").val(ui.item.AIT);
                    $(""#txtVAT"").val(ui.item.VAT);
                    $(""#txtRD"").val(ui.item.RD);
                    $(""#txtAT"").val(ui.item.AT);
                    $(""#txtSD"").val(ui.item.SD);
                }
            });
        }

        function GetItemHSCode(response) {

            var lstPOP = [];
            $.each(response, function (i, option) {
");
                WriteLiteral(@"                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.hsCode;
                obj.CD = option.CD;
                obj.SD = option.SD;
                obj.VAT = option.VAT;
                obj.AIT = option.AIT;
                obj.AT = option.AT;
                obj.RD = option.RD;
                obj.EXD = option.EXD;
                obj.TTI = option.TTI;
                obj.vatcatName = option.vatCategory.vatCategoryName;
                obj.vattabName = option.vatTable.tableName;
                obj.vatscheduleName = option.vATSchedule.vatScheduleName;
                lstPOP[lstPOP.length] = obj;
            });
            $('#itemHsCode').autocomplete({
                source: lstPOP,
                select: function (event, ui) {
                   // alert(ui.item.vattabName);
                    $(""#itemHsCodeId"").val(ui.item.key);
                    $(""#txtVatTable"").val(ui.item.vattabName);
                    $(""#txtVat");
                WriteLiteral(@"Schedule"").val(ui.item.vatscheduleName);
                    $(""#txtVatCat"").val(ui.item.vatcatName);
                    $(""#txtCD"").val(ui.item.CD);
                    $(""#txtTTI"").val(ui.item.TTI);
                    $(""#txtAIT"").val(ui.item.AIT);
                    $(""#txtVAT"").val(ui.item.VAT);
                    $(""#txtRD"").val(ui.item.RD);
                    $(""#txtAT"").val(ui.item.AT);
                    $(""#txtSD"").val(ui.item.SD);
                }
            });
        }

        function GetItemHSCodebyCode(response) {

            $(""#txtVatTable"").val(response.vatTable.tableName);
            $(""#txtVatSchedule"").val(response.vATSchedule.vatScheduleName);
            $(""#txtVatCat"").val(response.vatCategory.vatCategoryName);
        }

        function hideelement(name) {

            $('#s' + name).remove();
            $('#d' + name).remove();

        }
        function Remove(Id) {
            chk = confirm('Do you want to delete this?');
            if (c");
                WriteLiteral(@"hk) {
                location.replace(""/MasterData/Item/Delete/"" + Id);
            } else {
                return false;
            }
        }
        function GetSpecName(response) {
            console.log(response);
            $('#itemspecification').empty();
            $.each(response, function (i, item) {
                //AddSpecEdit(item.specificationName)
                //$(""#itemspecification"").val(item.specificationName);
                $(""#itemSpecificationId"").val(item.Id);

            });

        }
        function GetItemName(response) {

            //console.log(response.itemName);
            $(""#armsTypeId"").val(response.armsTypeId);
            //$.each(response, function (i, item) {
            //    alert(itemName);
            //    $(""#parentName"").val(item.itemName);
            //});

        }
        function GetItemList(response) {
            console.log(response)
            var lstPOP = [];
            // console.log(response);
         ");
                WriteLiteral(@"   $.each(response, function (i, option) {
                //  alert(option.itemName);
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.categoryName;
                lstPOP[lstPOP.length] = obj;
            });
            $('#armsTypeId').autocomplete({
                source: lstPOP,
                select: function (event, ui) {
                    $(""#armsTypeId"").val(ui.item.value);
                    $(""#parentId"").val(ui.item.key);

                }
            });

        }

        function Edit(Id, itemName, unitId, itemCode, itemDescription, parentId, hsCode, hsCodeId,costingMthd,reorderQty,productTypeId,cd,tti,ait,vat,rd,at,sd) {
            $(""#itemId"").val(Id);
            $(""#itemName"").val(itemName);
            $(""#unitId"").val(unitId);
            $(""#itemCode"").val(itemCode);
            $(""#itemDescription"").val(itemDescription);
            $(""#parentId"").val(parentId);
            $(""#itemHsCode"").");
                WriteLiteral(@"val(hsCode);
            $(""#itemHsCodeId"").val(hsCodeId);
            $(""#costingMethod"").val(costingMthd);
            $(""#reorderQty"").val(reorderQty);
            $(""#productionTypeId"").val(productTypeId);
            $(""#txtCD"").val(cd);
            $(""#txtTTI"").val(tti);
            $(""#txtAIT"").val(ait);
            $(""#txtVAT"").val(vat);
            $(""#txtRD"").val(rd);
            $(""#txtAT"").val(at);
            $(""#txtSD"").val(sd);
            //Common.Ajax('GET', '/api/Item/GetItemHSCodeByHsCode/' + hsCode, [], 'json', GetItemHSCodebyCode);
            //Common.Ajax('GET', '/MasterData/Item/GetAllSpecificationDetailByitemId/?itemId=' + $(""#itemId"").val(), [], 'json', ajaxGetAllSpecificationDetailByitemId);
            //Common.Ajax('GET', '/global/api/ItemSpec/' + Id, [], 'json', GetSpecName);
            //Common.Ajax('GET', '/global/api/CatParent/' + parentId, [], 'json', GetItemName);
            LoadAttachment(Id);


        }
        function LoadAttachment(Id) {
        ");
                WriteLiteral(@"var rowno = 0
        $.ajax({
            type: 'GET',
            contentType: ""application/json; charset=utf-8"",
            url: '/MasterData/Item/GetAttachmentListByitemId?itemId=' + Id,
            data: {},
            dataType: 'json',
            async: true,
            success: function (attachments) {
                var index = 1;
                var dtTable = $(""#dtAttachment"");
                var tableBody = dtTable.find('tbody');
                tableBody.empty();
                $.each(attachments, function (index, E) {
                    rowno = rowno + 1;
                    var filePath = '/Upload/'+E.fileName
                    $('#SubjectName').val(E.Subject);
                    if (E.FilePath != """") {
                        if (E.MimeType == ""application/msword"" || E.MimeType == ""application/pdf"" || E.MimeType == ""application/x-msexcel"" || E.MimeType == ""application/octet-stream"" || E.MimeType == ""text/plain"" || E.MimeType == ""application/vnd.openxmlformats-office");
                WriteLiteral(@"document.wordprocessingml.document"" || E.MimeType == ""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"") {
                            tableBody.append(
                                '<tr id=' + rowno + '>' +
                                '<td>' + E.fileName + '</td>' +

                                '<td><i class=""fa fa-file"" style=""font-size:40px;color:lightgray""> </i></td>' +
                                '<td><a href=' + ""'"" + filePath + ""'"" + '  target=""_blank""  title=""Preview""  class=""btn btn-info btn-sm""><i class=""fa fa-eye""></i></a>' +
                                '&nbsp;&nbsp;' + '<a href=""javascript:void(0)"" class=""btn btn-danger btn-sm"" title=""Delete"" onclick=""DeleteImage(' + rowno + ',' + ""'"" + E.fileName + ""'"" + ')"">Delete</a></td>' +
                                '</tr>')
                        }
                        else {
                            tableBody.append(
                                '<tr id=' + rowno + '>' +
                       ");
                WriteLiteral(@"         '<td>' + E.fileName + '</td>' +

                                '<td style=""height:50px;width: 45px; background - color:lightgray""><img src=' + ""'"" + filePath + ""'"" + ' height=50 width=45 /></td>' +
                                '<td><a href=' + ""'"" + filePath + ""'"" + '  target=""_blank""  title=""Preview""  class=""btn btn-info btn-sm""><i class=""fa fa-eye""></i></a>' +
                                '&nbsp;&nbsp;' + '<a href=""javascript:void(0)"" class=""btn btn-danger btn-sm"" title=""Delete"" onclick=""DeleteImage(' + rowno + ',' + ""'"" + E.fileName + ""'"" + ')"">Delete</a></td>' +
                                '</tr>')
                        }
                    }
                    index = index + 1;
                });
                $('#AjaxLoader').hide()
            },
            //error: function (request, status, error) {
            //    alert(request.statusText + ""/"" + request.statusText + ""/"" + error);
            //}
        });
    }
        function AdditemDetails() {
");
                WriteLiteral(@"            var ifExistIndex = window.localStorage.getItem(""holdIndex"");
            var index = ""0"";
            if (ifExistIndex == ""null"" || ifExistIndex == null) {
                index = $(""#tblitemDetails tbody>tr"").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $(""#tblitemDetails tbody >tr:eq("" + ifExistIndex + "") td:eq(0) .clsspecificationCategoryId"").val();
            }

            if ($(""#itemspecification"").val() == """") {
                alert(""Plaese Enter Specification Name."");
                return false
            }

            if ($(""#specCategory"").val() == """") {
                alert(""Plaese Enter Specification Category."");
                return false
            }
            if ($(""#catValue"").val() == """") {
                alert(""Plaese Enter Category Value."");
                return false
            }



            let id = parseInt($(""#detailsId"").val()) ? parseInt($(""#detailsId"").val()) : 0;
    ");
                WriteLiteral(@"        var itemSpecificationName = $(""#itemspecification"").val();
            var itemSpecificationNameShow = $(""#itemspecification"").val();
            var specificationCategoryId = $(""#specCategory"").val();
            var specificationCategoryName = $(""#specCategory option:selected"").text();
            var catValue = $(""#catValue"").val();

            var RowCount = $(""#tblitemDetails tbody>tr"").length;
            var editOption = parseInt($('#IsEdit').val()) ? parseInt($('#IsEdit').val()) : 0;

            for (i = 0; i <= RowCount; i++) {
                var _itemSpecificationName = $(""#itemSpecificationNameVD"" + i).val();
                var _specificationCategoryId = $(""#specificationCategoryId"" + i).val();
                if ((_itemSpecificationName == itemSpecificationName && _specificationCategoryId == specificationCategoryId) && editOption == 0) {
                    alert('You have already added this Specification Category!');
                    return false
                }
 ");
                WriteLiteral(@"               if (editOption == 1) {
                    itemSpecificationNameShow = itemSpecificationNameShowedit;
                }
                else {
                    if (_itemSpecificationName == itemSpecificationName) {
                        itemSpecificationNameShow = """";
                    }
                }

            }

            var dtTable = $(""#tblitemDetails"");
            var tableBody = dtTable.find('tbody');
            var trHtml = '<tr id=' + index + '>' +
                '<td>' + itemSpecificationNameShow + '<input type=""hidden"" id=""itemSpecificationName' + index + '"" name=""itemSpecificationName"" class=""clsitemSpecificationName"" value=""' + itemSpecificationNameShow + '""/><input type=""hidden"" id=""itemSpecificationNameVD' + index + '"" name=""itemSpecificationNameVD"" class=""clsitemSpecificationNameVD"" value=""' + itemSpecificationName + '""/></td>' +
                '<td>' + specificationCategoryName + '<input type=""hidden"" name=""id""class=""clsId"" value=""' + id + '"">");
                WriteLiteral(@"<input type=""hidden"" id=""specificationCategoryId' + index + '"" name=""specificationCategoryId"" class=""clsspecificationCategoryId"" value=""' + specificationCategoryId + '""/></td>' +
                '<td>' + catValue + '<input type=""hidden"" id=""CategoryValue' + index + '"" name=""CategoryValue"" class=""clsCategoryValue"" value=""' + catValue + '""/></td>' +
                '<td><a href=""javascript:void(0)""style=""background-color:red;border-color:red"" data-toggle=""tooltip"" title=""Delete"" class=""btn btn-danger btn-xs"" onclick=""Delete(' + index + ')""><i class=""fa fa-trash""></i></a>&nbsp;&nbsp;' +
                '<a onclick=""EditTbl(' + index + "","" + specificationCategoryId + "", '"" + itemSpecificationName + ""',  '"" + catValue + ""', '"" + itemSpecificationNameShow + ""',"" + id + ')"" href=""javascript:void(0)"" title=""Edit"" class=""btn btn-success btn-xs"" > <i class=""fa fa-edit""></i></a >' +


                '</tr>';
            if (ifExistIndex == null || ifExistIndex == ""null"") {
                tableBody.append(trHtm");
                WriteLiteral(@"l);
            }
            else {
                var rowUpdate = $(""#tblitemDetails tbody >tr:eq("" + ifExistIndex + "")"");
                rowUpdate.replaceWith(trHtml);
                window.localStorage.setItem(""holdIndex"", null);
                ifExistIndex = null;
            }

            Refresh();
        }

        //function Refersh() {
        //    window.reload();
        //}

        var itemSpecificationNameShowedit = """";

        function EditTbl(index, specificationCategoryId, itemSpecificationName, catValue, itemSpecificationNameShow, Id) {
            var rightIndex = index;
            itemSpecificationNameShowedit = itemSpecificationNameShow;
            $(""#IsEdit"").val(1);
            $('#detailsId').val(Id);
            $('#itemspecification').val(itemSpecificationName);
            $('#specCategory').val(specificationCategoryId);
            $('#catValue').val(catValue);

            $(""#itemspecification"").prop(""disabled"", true);
            $(""#specC");
                WriteLiteral(@"ategory"").prop(""disabled"", true);

            window.localStorage.setItem('holdIndex', null);
            if (rightIndex != null) {
                window.localStorage.setItem('holdIndex', rightIndex);
            }
        }

        function Refresh() {
            $('#detailsId').val('');
            $(""#IsEdit"").val(0);
            $(""#itemspecification"").val('');
            $(""#specCategory"").val('');
            $(""#catValue"").val('');

            $('#specCategory').val('');
            $('#catValue').val('');
            $(""#itemHsCode"").val('');
            $(""#itemHsCodeId"").val('0');
            $(""#itemspecification"").prop(""disabled"", false);
            $(""#specCategory"").prop(""disabled"", false);

            window.localStorage.setItem(""holdIndex"", null);
            ifExistIndex = null;
        }
        function RefreshAll() {
            location.reload();
        }

        function Delete(index) {
            swal({
                title: 'Are you sure?', te");
                WriteLiteral(@"xt: 'Do you want to delete this record!', type: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, delete it!'
            }).then(function () {
                $(""#tblitemDetails #"" + index).remove();
                swal('', 'Deleted Successfully!', 'success');
            });

        }


        function ajaxGetAllSpecificationDetailByitemId(response) {
            console.log(response);
            var ifExistIndex = window.localStorage.getItem(""holdIndex"");
            var index = ""0"";
            if (ifExistIndex == ""null"" || ifExistIndex == null) {
                index = $(""#tblitemDetails tbody>tr"").length;
            }
            else {
                index = ifExistIndex;
                tdRID = $(""#tblitemDetails tbody >tr:eq("" + ifExistIndex + "") td:eq(0) .clsspecificationCategoryId"").val();
            }
            $(""#tblitemDetails tbody>tr"").empty();
            $.each(response, function (key, value) ");
                WriteLiteral(@"{
                var itemSpecificationName = value.specificationName;
                var itemSpecificationNameShow = value.specificationName;
                var RowCount = $(""#tblitemDetails tbody>tr"").length;
                for (i = 0; i <= RowCount; i++) {
                    var _itemSpecificationName = $(""#itemSpecificationNameVD"" + i).val();

                    if (_itemSpecificationName == itemSpecificationName) {
                        itemSpecificationNameShow = """";
                    }
                }

                index = $(""#tblitemDetails tbody>tr"").length;
                var dtTable = $(""#tblitemDetails"");
                var tableBody = dtTable.find('tbody');
                var trHtml = '<tr id=' + index + '>' +
                    '<td>' + itemSpecificationNameShow + '<input type=""hidden"" id=""itemSpecificationName' + index + '"" name=""itemSpecificationName"" class=""clsitemSpecificationName"" value=""' + itemSpecificationNameShow + '""/><input type=""hidden"" id=""itemSpeci");
                WriteLiteral(@"ficationNameVD' + index + '"" name=""itemSpecificationNameVD"" class=""clsitemSpecificationNameVD"" value=""' + itemSpecificationName + '""/></td>' +
                    '<td>' + value.specificationCategoryName + '<input type=""hidden"" name=""id""class=""clsId"" value=""' + value.Id + '""><input type=""hidden"" id=""specificationCategoryId' + index + '"" name=""specificationCategoryId"" class=""clsspecificationCategoryId"" value=""' + value.specificationCategoryId + '""/></td>' +
                    '<td>' + value.value + '<input type=""hidden"" id=""CategoryValue' + index + '"" name=""CategoryValue"" class=""clsCategoryValue"" value=""' + value.value + '""/></td>' +
                    '<td><a href=""javascript:void(0)""style=""background-color:red;border-color:red"" data-toggle=""tooltip"" title=""Delete"" class=""btn btn-danger btn-xs"" onclick=""Delete(' + index + ')""><i class=""fa fa-trash""></i></a>&nbsp;&nbsp;' +
                    '<a onclick=""EditTbl(' + index + "","" + value.specificationCategoryId + "", '"" + value.specificationName + ""',  '"" ");
                WriteLiteral(@"+ value.value + ""','"" + itemSpecificationNameShow + ""',"" + value.Id + ')"" href=""javascript:void(0)"" title=""Edit"" class=""btn btn-success btn-xs"" > <i class=""fa fa-edit""></i></a >' +


                    '</tr>';
                if (ifExistIndex == null || ifExistIndex == ""null"") {
                    tableBody.append(trHtml);
                }
                else {
                    var rowUpdate = $(""#tblitemDetails tbody >tr:eq("" + ifExistIndex + "")"");
                    rowUpdate.replaceWith(trHtml);
                    window.localStorage.setItem(""holdIndex"", null);
                    ifExistIndex = null;
                }
            })

            index = index + 1;
        }
        function ShowTree() {
            Id = $(""#parentId"").val();

            Common.Ajax('GET', '/MasterData/ItemCategory/GetCategoriesJson/?org=' + Id, [], 'json', ajaxHandle);
        }
        function ajaxHandle(response) {
            console.log(response);
            GenerateTree(response.m");
                WriteLiteral(@"enus);
        }

        function wrap(text, width) {
            text.each(function () {
                var text = d3.select(this),
                    words = d3.select(this).data()[0].name.split(""|"").reverse(),
                    word,
                    line = [],
                    lineNumber = 0,
                    lineHeight = 1.1,
                    y = text.attr(""y""),
                    dy = parseFloat(text.attr(""dy"")),
                    tspan = text.text(null).append(""tspan"").attr(""x"", 10).attr(""y"", y).attr(""dy"", dy + ""em"");
                while (word = words.pop()) {
                    line.push(word);
                    tspan.text(line.join("" ""));
                    //if (tspan.node().getComputedTextLength() > width) {
                    line.pop();
                    tspan.text(line.join("" ""));
                    line = [word];
                    tspan = text.append(""tspan"").attr(""x"", 10).attr(""y"", y).attr(""dy"", ++lineNumber * lineHeight + dy + ""em"").text(wo");
                WriteLiteral(@"rd);
                    // }
                }
                d3.select(this.parentNode.children[0]).attr(""height"", 20 * (lineNumber + 1));
            });
        };

        var margin = {
            top: 20,
            right: 120,
            bottom: 20,
            left: 20
        },
            width = 960 - margin.right - margin.left,
            height = 800 - margin.top - margin.bottom;

        var i = 0,
            duration = 750,
            rectW = 105,
            fontSize = 10,
            rectH = 20;
        var root;
        var tree = d3.layout.tree().nodeSize([120, 110]);
        var diagonal = d3.svg.diagonal()
            .projection(function (d) {
                return [d.x + rectW / 2, d.y + rectH / 2];
            });

        var svg = d3.select(""#organoDiv"").append(""svg"").attr(""width"", 1400).attr(""height"", 1400)
            .call(zm = d3.behavior.zoom().scaleExtent([1, 4]).on(""zoom"", redraw)).append(""g"")
            .attr(""transform"", ""translate("" ");
                WriteLiteral(@"+ 350 + "","" + 20 + "")"");

        //necessary so that zoom knows where to zoom and unzoom from
        zm.translate([350, 20]);
        //

        d3.select(""#organoDiv"").style(""height"", ""600px"");

        function GenerateTree(tempData, tempdepth) {

            root = JSON.parse(tempData);
            console.log(root);

            root.x0 = 0;
            root.y0 = height / 2;
            root.children.forEach(collapse);
            update(root);

        }


        function collapse(d) {
            if (d.children) {
                d._children = d.children;
                d._children.forEach(collapse);
                d.children = null;
            }
        }


        function update(source) {

            // Compute the new tree layout.
            var nodes = tree.nodes(root).reverse(),
                links = tree.links(nodes);

            // Normalize for fixed-depth.
            nodes.forEach(function (d) {
                d.y = d.depth * 180;
          ");
                WriteLiteral(@"  });

            // Update the nodes…
            var node = svg.selectAll(""g.node"")
                .data(nodes, function (d) {
                    return d.id || (d.id = ++i);
                });

            // Enter any new nodes at the parent's previous position.
            var nodeEnter = node.enter().append(""g"")
                .attr(""class"", ""node"")
                .attr(""transform"", function (d) {
                    return ""translate("" + source.x0 + "","" + source.y0 + "")"";
                }).on(""click"", click);

            nodeEnter.append(""rect"")
                .attr(""width"", rectW)
                //.attr(""height"", rectH)
                //.attr(""height"", function (d) { if(d.size == 1)  return rectH;  else return 80})
                .attr(""stroke"", ""blue"")
                .attr(""stroke-width"", 1)
                .style(""fill"", function (d) {
                    return d._children ? ""lightsteelblue"" : ""#fff"";
                });

            nodeEnter.append(""text"")
 ");
                WriteLiteral(@"               .attr(""x"", 10)
                .attr(""y"", 10)
                .attr(""dy"", ""0"")
                .attr(""text-anchor"", ""start"")
                .text(function (d) { return d.name; });

            // Transition nodes to their new position.
            var nodeUpdate = node.transition()
                .duration(duration)
                .attr(""transform"", function (d) {
                    return ""translate("" + d.x + "","" + d.y + "")"";
                });

            nodeUpdate.select(""rect"")
                .attr(""width"", rectW)
                //.attr(""height"", function (d) { if(d.size == 1)  return rectH;  else return 80})
                .attr(""stroke"", ""black"")
                .attr(""stroke-width"", 1)
                .style(""fill"", function (d) {
                    return d._children ? ""lightsteelblue"" : ""#fff"";
                });

            nodeUpdate.select(""text"")
                .style(""fill-opacity"", 1);
            nodeUpdate.select(""text"").call(wrap, rectW);");
                WriteLiteral(@"
            // Transition exiting nodes to the parent's new position.
            var nodeExit = node.exit().transition()
                .duration(duration)
                .attr(""transform"", function (d) {
                    return ""translate("" + source.x + "","" + source.y + "")"";
                }).remove();

            nodeExit.select(""rect"")
                .attr(""width"", rectW)
                //.attr(""height"", function (d) { if(d.size == 1)  return rectH;  else return 80})
                .attr(""stroke"", ""black"")
                .attr(""stroke-width"", 1);

            nodeExit.select(""text"");

            // Update the links…
            var link = svg.selectAll(""path.link"")
                .data(links, function (d) {
                    return d.target.id;
                });

            // Enter any new links at the parent's previous position.
            link.enter().insert(""path"", ""g"")
                .attr(""class"", ""link"")
                .attr(""x"", rectW / 2)
           ");
                WriteLiteral(@"     .attr(""y"", rectH / 2)
                .attr(""d"", function (d) {
                    var o = {
                        x: source.x0,
                        y: source.y0
                    };
                    return diagonal({
                        source: o,
                        target: o
                    });
                });

            // Transition links to their new position.
            link.transition()
                .duration(duration)
                .attr(""d"", diagonal);

            // Transition exiting nodes to the parent's new position.
            link.exit().transition()
                .duration(duration)
                .attr(""d"", function (d) {
                    var o = {
                        x: source.x,
                        y: source.y
                    };
                    return diagonal({
                        source: o,
                        target: o
                    });
                }).remove();

            ");
                WriteLiteral(@"// Stash the old positions for transition.
            nodes.forEach(function (d) {
                d.x0 = d.x;
                d.y0 = d.y;
            });
        }

        // Toggle children on click.
        function click(d) {

            if (d.children) {
                d._children = d.children;
                d.children = null;
            } else {
                d.children = d._children;
                d._children = null;
            }
            $(""#selectedInputName,#armsTypeId,#organizationName,#organoOrganizationName"").val(d.nameBN);
            $(""#organoOrganizationParrentId,#parentId,#organoOrganizationId"").val(d.data);

            update(d);
        }

        //Redraw for zoom
        function redraw() {
            //console.log(""here"", d3.event.translate, d3.event.scale);
            svg.attr(""transform"",
                ""translate("" + d3.event.translate + "")""
                + "" scale("" + d3.event.scale + "")"");
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(41906, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<FADMS.Areas.FAMSDEALER.Models.ItemViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
